{"version":3,"file":"static/js/131.f662eccf.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.0.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { warning } from '../../utils/errors.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animateValue({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animateValue, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateValue } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            elapsed: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animateValue } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animateValue({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from '../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animateValue } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !((isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.0.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.0.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","undefined","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","push","cancel","index","splice","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","read","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","maxDuration","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","passTimestamp","animateValue","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","controls","dragControls","addListeners","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","fallback","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","record","data","MotionDebug","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}