{"version":3,"file":"static/js/972.98bfa85e.chunk.js","mappings":"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","sources":["components/Balance/Balance.styled.jsx","components/Balance/Balance.jsx","components/UI/AnimateBackground/AnimateBackground.styled.jsx","components/UI/AnimateBackground/AnimateBackground.jsx","components/UI/Background/Background.styled.jsx","components/UI/Background/Background.jsx","components/UI/Cabbage/Cabbage.styled.jsx","components/UI/Cabbage/Cabbage.jsx","pages/ReportsPage/ReportsPage.styled.jsx","components/ReportsReturnBack/ReportsReturnBack.styled.jsx","components/ReportsReturnBack/ReportsReturnBack.jsx","components/ReportsBalanceContainer/ReportsBalanceContainer.jsx","components/ReportsCurrentPeriod/ReportsCurrentPeriod.styled.jsx","components/ReportsCurrentPeriod/ReportsCurrentPeriod.jsx","components/ReportsNav/ReportsNav.styled.jsx","components/ReportsNav/ReportsNav.jsx","redux/reports/selectors.js","components/ReportsMonthBalance/ReportsMonthBalance.styled.jsx","components/ReportsMonthBalance/ReportsMonthBalance.jsx","components/ReportItem/ReportItem.styled.jsx","components/ReportItem/ReportItem.jsx","components/ReportsMonthSummary/ReportsMonthSummary.styled.jsx","components/UI/Message/Message.styled.jsx","components/UI/Message/Message.jsx","components/ReportsMonthSummary/ReportsMonthSummary.jsx","components/ReportsChart/ReportsChart.styled.jsx","components/ReportsChart/ReportsChart.jsx","pages/ReportsPage/ReportsPage.jsx","redux/transaction/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport DEVICE from 'constants/deviceSize';\nimport { TRANSITION } from 'constants/constants';\nconst { duration, timing, delay } = TRANSITION;\n\nexport const Wrapper = styled.div`\n  margin-top: 32px;\n  z-index: 3;\n\n  @media ${DEVICE.tablet} {\n    display: flex;\n    justify-content: start;\n    align-items: baseline;\n    flex-direction: row;\n\n    margin-top: 0px;\n  }\n  @media ${DEVICE.laptop} {\n    justify-content: center;\n    align-items: baseline;\n    flex-direction: row;\n    margin-left: 0;\n    flex-grow: 1;\n  }\n`;\nexport const Title = styled.h2`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.6;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column;\n  letter-spacing: 0.02em;\n  color: ${p => p.theme.lightGreyColor};\n\n  @media ${DEVICE.tablet} {\n    margin-right: 21px;\n    margin-left: 36px;\n  }\n  @media ${DEVICE.laptop} {\n    margin-right: 40px;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  z-index: 10;\n  justify-content: center;\n  align-items: center;\n  flex-direction: row;\n  margin-top: 8px;\n\n  @media ${DEVICE.tablet} {\n    align-items: baseline;\n    padding: 0;\n    margin: 0;\n  }\n`;\n\nexport const Input = styled.input`\n  font-family: inherit;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.17;\n  width: 140px;\n  height: 44px;\n  padding: 0;\n  padding-right: 45px;\n  color: ${p => p.theme.tableHeadTextColor};\n  text-align: right;\n  border: 2px solid ${p => p.theme.headerColor};\n  border-radius: 20px 0 0 20px;\n  background-color: transparent;\n  outline: none;\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n  ::-moz-outer-spin-button,\n  ::-moz-inner-spin-button {\n    -moz-appearance: none;\n  }\n  ::-ms-outer-spin-button,\n  ::-ms-inner-spin-button {\n    -ms-appearance: none;\n  }\n\n  @media ${DEVICE.tablet} {\n    margin-right: 15px;\n    padding-right: 45px;\n    border-radius: 16px;\n    width: 121px;\n  }\n\n  @media ${DEVICE.laptop} {\n    margin-right: 16px;\n    padding-right: 44px;\n  }\n\n  &::placeholder {\n    font-weight: 700;\n    font-size: 13px;\n    line-height: 1.17;\n    letter-spacing: 0.02em;\n    color: ${p => p.theme.tableHeadTextColor};\n  }\n`;\n\nexport const Button = styled.button`\n  width: 140px;\n  height: 44px;\n  font-family: inherit;\n  font-size: 13px;\n  line-height: 1.17;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n\n  color: ${p => p.theme.lightGreyColor};\n  border: 2px solid ${p => p.theme.headerColor};\n  border-left: none;\n  border-radius: 0 20px 20px 0;\n  cursor: pointer;\n  background-color: transparent;\n\n  transition: color ${duration} ${timing} ${delay},\n    background-color ${duration} ${timing} ${delay},\n    border-color ${duration} ${timing} ${delay};\n\n  &:focus,\n  &:hover {\n    color: ${p => p.theme.whiteTextColor};\n    background-color: ${p => p.theme.accentColor};\n    border-color: ${p => p.theme.accentColor};\n  }\n\n  @media ${DEVICE.tablet} {\n    width: 125px;\n    border-radius: 16px;\n    border: 2px solid ${p => p.theme.headerColor};\n    justify-content: center;\n    padding: 0;\n  }\n`;\nexport const Label = styled.label`\n  position: absolute;\n  top: 16px;\n  right: 15px;\n  font-weight: 700;\n  font-style: normal;\n  font-size: 12px;\n  line-height: 14px;\n  text-transform: none;\n  color: ${p => p.theme.tableHeadTextColor};\n\n  @media ${DEVICE.tablet} {\n    margin-right: 20px;\n  }\n`;\nexport const InputContainer = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: center;\n  position: relative;\n`;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Form,\n  Title,\n  Input,\n  Button,\n  Wrapper,\n  Label,\n  InputContainer,\n} from './Balance.styled';\nimport { useTranslation } from 'react-i18next';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setBalance } from 'redux/auth/operations';\nimport { selectBalance, selectFirstBalance } from 'redux/auth/selectors';\n\nconst Balance = () => {\n  const [value, setValue] = useState('');\n  const currentBalance = useSelector(selectBalance);\n  const firstBalance = useSelector(selectFirstBalance);\n\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    setValue(currentBalance);\n  }, [currentBalance]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    dispatch(setBalance({ balance: e.target.elements.balance.value }));\n  };\n\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <Wrapper>\n      <Title> {t('Balance')}:</Title>\n      <Form onSubmit={onSubmit}>\n        <InputContainer>\n          <Input\n            type=\"number\"\n            readOnly={firstBalance}\n            name=\"balance\"\n            // placeholder={`${currentBalance.toFixed(2)}`}\n            pattern=\"[0-9, .UAH]*\"\n            value={value}\n            onChange={onChange}\n          />\n          <Label>{t('UAH')} </Label>\n        </InputContainer>\n        {!firstBalance && <Button type=\"submit\">{t('button.CONFIRM')}</Button>}\n      </Form>\n    </Wrapper>\n  );\n};\n\nexport default Balance;\n","import styled from 'styled-components';\n\nimport DEVICE from 'constants/deviceSize';\n\nexport const BackgroundGrey = styled.div`\n  z-index: -1;\n  width: 100%;\n  height: 342px;\n\n  position: absolute;\n  top: 0;\n  background-color: ${p => p.theme.tableHeadBackgroundColor};\n  border-bottom-left-radius: 20%;\n\n  overflow: hidden;\n\n  box-shadow: ${p => p.theme.headerBoxShadow}, 0px 4px 5px 0px rgb(0 0 0 / 14%),\n    0px 1px 10px 0px rgb(0 0 0 / 12%);\n\n  @media ${DEVICE.tablet} {\n    height: 582px;\n  }\n  @media ${DEVICE.laptop} {\n    height: 582.5px;\n  }\n`;\n\nexport const BackgroundWhite = styled.div`\n  display: none;\n\n  @media ${DEVICE.laptop} {\n    display: block;\n    z-index: -2;\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    bottom: -1px;\n\n    overflow: hidden;\n  }\n`;\n","import { CabbageList } from '../Cabbage/Cabbage';\nimport { BackgroundGrey, BackgroundWhite } from './AnimateBackground.styled';\n\nexport const AnimateBackground = ({ white }) => {\n  if (white)\n    return (\n      <BackgroundWhite>\n        <CabbageList />\n      </BackgroundWhite>\n    );\n\n  return (\n    <BackgroundGrey>\n      <CabbageList />\n    </BackgroundGrey>\n  );\n};\n","import styled from 'styled-components';\n\nimport DEVICE from 'constants/deviceSize';\n\nexport const BackgroundGrey = styled.div`\n  width: 100%;\n  height: 352px;\n  z-index: -1;\n\n  position: absolute;\n  top: 0;\n  background-color: ${p => p.theme.tableHeadBackgroundColor};\n  border-bottom-left-radius: 20%;\n\n  overflow: hidden;\n\n  box-shadow: ${p => p.theme.headerBoxShadow}, 0px 4px 5px 0px rgb(0 0 0 / 14%),\n    0px 1px 10px 0px rgb(0 0 0 / 12%);\n\n  @media ${DEVICE.tablet} {\n    height: 583px;\n  }\n`;\n\nexport const CabbageContainer = styled.div`\n  display: none;\n\n  @media ${DEVICE.tablet} {\n    position: absolute;\n    right: 88px;\n    bottom: 58px;\n\n    z-index: -1;\n    display: flex;\n  }\n\n  @media ${DEVICE.laptop} {\n    display: none;\n  }\n`;\n","import { Cabbage } from '../Cabbage/Cabbage';\nimport { AnimateBackground } from '../AnimateBackground/AnimateBackground';\n\nimport { BackgroundGrey, CabbageContainer } from './Background.styled';\n\nexport const Background = () => {\n  return (\n    <>\n      <BackgroundGrey />\n      <AnimateBackground white={true} />\n      <CabbageContainer>\n        <Cabbage />\n        <Cabbage position={true} />\n      </CabbageContainer>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport DEVICE from 'constants/deviceSize';\nimport { keyframes } from '@emotion/css';\n\nconst letDown = keyframes`\n  from {\n    transform: translateY(0%);\n  }\n50% {\n    transform: translateY(20px);\n}\n  to {\n   transform: translateY(0%);\n  }\n`;\n\nconst increase = keyframes`\n  from {\n    width: 67px;\n        background-color: #f5f6fb;\n  }\n50% {\n    width: 80px;\n        background-color: #DBDBDB;\n}\n  to {\n    width: 67px;\n        background-color: #f5f6fb;\n  }\n`;\n\nexport const LeftCabbageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  & > svg {\n    width: 83px;\n    height: 89px;\n    margin-bottom: 20px;\n    animation: ${letDown} 4s linear infinite;\n  }\n\n  & > div {\n    display: block;\n\n    width: 67px;\n    height: 14px;\n    border-radius: 50%;\n    background-color: #f5f6fb;\n    animation: ${increase} 4s linear infinite;\n  }\n`;\n\nexport const RightCabbageWrapper = styled.div`\n  display: none;\n\n  @media ${DEVICE.tablet} {\n    display: flex;\n    flex-direction: column;\n\n    position: relative;\n    top: -16px;\n    left: 11px;\n\n    z-index: -1;\n\n    & > svg {\n      display: block;\n      width: 83px;\n      height: 89px;\n      margin-bottom: 20px;\n      animation: ${letDown} 4s linear infinite;\n    }\n\n    & > div {\n      display: block;\n\n      width: 67px;\n      height: 14px;\n      border-radius: 50%;\n      background-color: #f5f6fb;\n      animation: ${increase} 4s linear infinite;\n    }\n  }\n`;\n\nconst bubble = keyframes`\n  0%{\n        transform: translateY(0) rotate(0deg);\n        opacity: 1;\n        border-radius: 0;\n    }\n\n    100%{\n        transform: translateY(-150vw) rotate(750deg);\n        opacity: 0;\n        border-radius: 50%;\n\n    }\n`;\n\nexport const Item = styled.li`\n  position: absolute;\n  display: block;\n  animation: ${bubble} 20s linear infinite;\n  bottom: -85px;\n  opacity: 0;\n  stroke: ${p => p.theme.cabbageSvgColor};\n\n  &:nth-child(1) {\n    transform: rotate(-90deg);\n\n    left: 0%;\n    animation-delay: 8s;\n  }\n  &:nth-child(2) {\n    left: 20%;\n    animation-delay: 5s;\n  }\n  &:nth-child(3) {\n    left: 40%;\n    transform: rotate(90deg);\n    animation-delay: 7s;\n  }\n  &:nth-child(4) {\n    left: 60%;\n    transform: rotate(-90deg);\n    animation-delay: 11s;\n  }\n  &:nth-child(5) {\n    left: 80%;\n    transform: rotate(-180deg);\n    animation-delay: 13s;\n  }\n  &:nth-child(6) {\n    left: 99%;\n    transform: rotate(-90deg);\n    animation-delay: 3s;\n  }\n\n  @media ${DEVICE.tablet} {\n    &:nth-child(7) {\n      left: 50%;\n      animation-delay: 2s;\n    }\n\n    &:nth-child(8) {\n      left: 55%;\n      transform: rotate(-90deg);\n      animation-delay: 6s;\n    }\n    &:nth-child(9) {\n      left: 69%;\n      transform: rotate(-180deg);\n      animation-delay: 9s;\n    }\n    &:nth-child(10) {\n      left: 95%;\n      transform: rotate(-90deg);\n      animation-delay: 1s;\n    }\n    &:nth-child(11) {\n      left: 44%;\n      animation-delay: 4s;\n    }\n\n    &:nth-child(12) {\n      left: 85%;\n      transform: rotate(-90deg);\n      animation-delay: 15s;\n    }\n    &:nth-child(13) {\n      left: 38%;\n      transform: rotate(-120deg);\n      animation-delay: 3s;\n    }\n    &:nth-child(14) {\n      left: 90%;\n      transform: rotate(-120deg);\n      animation-delay: 17s;\n    }\n    &:nth-child(15) {\n      left: 15%;\n      transform: rotate(-120deg);\n      animation-delay: 10s;\n    }\n    &:nth-child(16) {\n      right: 65%;\n      transform: rotate(-120deg);\n      animation-delay: 6s;\n    }\n  }\n`;\n","import Icons from 'images/icons-sprite.svg';\n\nimport {\n  LeftCabbageWrapper,\n  RightCabbageWrapper,\n  Item,\n} from './Cabbage.styled';\n\nexport const Cabbage = ({ position }) => {\n  if (position) {\n    return (\n      <RightCabbageWrapper>\n        <svg alt=\"cabbage\">\n          <use href={`${Icons}#icon-cabbage-right`}></use>\n        </svg>\n        <div></div>\n      </RightCabbageWrapper>\n    );\n  }\n\n  return (\n    <LeftCabbageWrapper>\n      <svg alt=\"cabbage\">\n        <use href={`${Icons}#icon-cabbage-left`}></use>\n      </svg>\n      <div></div>\n    </LeftCabbageWrapper>\n  );\n};\n\nexport const CabbageList = () => {\n  return (\n    <ul>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n    </ul>\n  );\n};\n","import styled from 'styled-components';\nimport DEVICE from 'constants/deviceSize';\n//\nconst ReportsPageWrapper = styled.div`\n  margin: 19px 20px 0 20px;\n  display: flex;\n  flex-direction: column;\n\n  @media ${DEVICE.tablet} {\n    justify-content: center;\n    margin: 40px 32px 60px 32px;\n  }\n  @media ${DEVICE.laptop} {\n    margin: 40px 91px 83px 91px;\n  }\n`;\nexport default ReportsPageWrapper;\n","import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nimport DEVICE from 'constants/deviceSize';\n\nimport { TRANSITION } from 'constants/constants';\nconst { duration, timing, delay } = TRANSITION;\n\nexport const BackLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  margin-bottom: 16px;\n  color: ${p => p.theme.lightGreyColor};\n\n  transition: color ${duration} ${timing} ${delay};\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.mainTextColor};\n  }\n\n  @media ${DEVICE.tablet} {\n    margin-bottom: 0px;\n  }\n\n  & > p {\n    display: none;\n\n    @media ${DEVICE.tablet} {\n      font-weight: 400;\n      font-size: 12px;\n      line-height: 1.17;\n\n      letter-spacing: 0.04em;\n\n      color: ${p => p.theme.lightGreyColor};\n      display: block;\n      margin-left: 15px;\n    }\n\n    @media ${DEVICE.laptop} {\n      margin-left: 16px;\n    }\n  }\n`;\n","import Icons from 'images/icons-sprite.svg';\nimport { useTranslation } from 'react-i18next';\nimport { BackLink } from './ReportsReturnBack.styled';\n\nconst ReportsReturnBack = () => {\n  const { t } = useTranslation();\n  return (\n    <BackLink to=\"/operations\">\n      <svg width=\"24\" height=\"24\">\n        <use href={`${Icons}#icon-arrow-back`}></use>\n      </svg>\n      <p>{t('Main page')}</p>\n    </BackLink>\n  );\n};\n\nexport default ReportsReturnBack;\n","import React from 'react';\nimport Balance from 'components/Balance/Balance';\n\nconst ReportsBalanceContainer = () => {\n  return (\n    <div>\n      <Balance />\n    </div>\n  );\n};\n\nexport default ReportsBalanceContainer;\n","import styled from 'styled-components';\nimport { TRANSITION } from 'constants/constants';\nconst { duration, timing, delay } = TRANSITION;\n\nexport const Title = styled.h2`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.143;\n  color: ${p => p.theme.lightGreyColor};\n  text-align: center;\n`;\nexport const ContainerPeriod = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 7px;\n`;\n\nexport const Text = styled.p`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.143;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  width: 134px;\n  text-align: center;\n  color: ${p => p.theme.tableHeadTextColor};\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  border: white;\n  cursor: pointer;\n  background-color: transparent;\n  transition: transform ${duration} ${timing} ${delay};\n\n  &:hover,\n  &:focus {\n    transform: scale(0.9);\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { format, subMonths, addMonths } from 'date-fns';\nimport {\n  Title,\n  Button,\n  ContainerPeriod,\n  Text,\n} from './ReportsCurrentPeriod.styled';\nimport LeftIcon from 'images/icons-sprite.svg';\nimport RightIcon from 'images/icons-sprite.svg';\nimport { setCurrentPeriod } from 'redux/reports/slice';\nimport { useTranslation } from 'react-i18next';\nconst CurrentPeriod = () => {\n  const [newDate, setNewDate] = useState(() => new Date());\nconst { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      setCurrentPeriod({\n        month: format(newDate, 'MMMM'),\n        year: format(newDate, 'yyyy'),\n      })\n    );\n  }, [dispatch, newDate]);\n\n  const monthChangeLeft = () => {\n    const prevDate = subMonths(newDate, 1);\n    setNewDate(prevDate);\n  };\n  const monthChangeRight = () => {\n    const nextDate = addMonths(newDate, 1);\n    setNewDate(nextDate);\n  };\n\n  return (\n    <div>\n      <Title>{t('Current period')}:</Title>\n      <ContainerPeriod>\n        <Button type=\"button\" onClick={monthChangeLeft}>\n          <svg alt=\"exit\" width={16} height={16}>\n            <use href={`${LeftIcon}#icon-arrow-left`}></use>\n          </svg>\n        </Button>\n        <Text>{format(newDate, 'MMMM yyyy')}</Text>\n        <Button type=\"button\" onClick={monthChangeRight}>\n          <svg alt=\"exit\" width={16} height={16}>\n            <use href={`${RightIcon}#icon-arrow-right`}></use>\n          </svg>\n        </Button>\n      </ContainerPeriod>\n    </div>\n  );\n};\n\nexport default CurrentPeriod;\n","import styled from 'styled-components';\n\nimport DEVICE from 'constants/deviceSize';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  @media ${DEVICE.tablet} {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n\n  @media ${DEVICE.tablet} {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\n","import ReportsReturnBack from 'components/ReportsReturnBack/ReportsReturnBack';\nimport ReportsBalanceContainer from 'components/ReportsBalanceContainer/ReportsBalanceContainer';\nimport ReportsCurrentPeriod from 'components/ReportsCurrentPeriod/ReportsCurrentPeriod';\n\nimport { Wrapper, Container } from './ReportsNav.styled';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\nconst ReportsNav = () => {\n  const isScreenMorePhone = useMediaQuery('(min-width: 768px)');\n\n  return isScreenMorePhone ? (\n    <Wrapper>\n      <ReportsReturnBack />\n      <ReportsBalanceContainer />\n      <ReportsCurrentPeriod />\n    </Wrapper>\n  ) : (\n    <Wrapper>\n      <ReportsReturnBack />\n      <Container>\n        <ReportsBalanceContainer />\n        <ReportsCurrentPeriod />\n      </Container>\n    </Wrapper>\n  );\n};\n\nexport default ReportsNav;\n","export const selectCurrentPeriod = state => state.reports.currentPeriod;\nexport const selectAllSummaryReports = state => state.reports.allSummaryReports;\nexport const selectCategoryReports = state => state.reports.categoryReports;\nexport const selectItemsByCategory = state => state.reports.itemsByCategory;\nexport const selectIsLoading = state => state.reports.isLoading;\n","import styled from 'styled-components';\nimport DEVICE from 'constants/deviceSize';\n\nconst Wrapper = styled.div`\n  height: 85px;\n  background: ${p => p.theme.headerColor};\n  box-shadow: 5px 10px 20px rgba(170, 178, 197, 0.4);\n  border-radius: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  margin-bottom: 32px;\n\n  @media ${DEVICE.tablet} {\n    height: 50px;\n    box-shadow: 0px 10px 60px ${p => p.theme.sectionShadow};\n    border-radius: 30px;\n  }\n`;\nconst Text = styled.p`\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.14;\n  margin-bottom: 4px;\n  color: ${p => p.theme.mainTextColor};\n\n  @media ${DEVICE.tablet} {\n    margin-right: 15px;\n    margin-bottom: 0;\n  }\n`;\n\nconst Sum = styled.p`\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.14;\n  letter-spacing: 0.04em;\n  color: ${p => {\n    switch (p.color) {\n      case 'positive':\n        return `${p.theme.incomesTextColor}`;\n      case 'negative':\n        return '#E53935';\n      default:\n        return `${p.theme.tableHeadTextColor}`;\n    }\n  }};\n`;\n\nconst ExpensesContainer = styled.div`\n  width: 100%;\n  text-align: center;\n\n  @media ${DEVICE.tablet} {\n    justify-content: right;\n    display: flex;\n    padding-top: 15px;\n    padding-bottom: 15px;\n  }\n`;\nconst IncomeContainer = styled.div`\n  width: 100%;\n  text-align: center;\n  @media ${DEVICE.tablet} {\n    display: flex;\n  }\n`;\n\nconst Line = styled.div`\n  margin-left: 10px;\n  margin-right: 10px;\n  width: 2px;\n  height: 70px;\n  background-color: #e0e5eb;\n\n  @media ${DEVICE.tablet} {\n    margin-left: 20px;\n    margin-right: 20px;\n    height: 36px;\n  }\n`;\n\nexport { Line, Text, Sum, Wrapper, ExpensesContainer, IncomeContainer };\n","import { useSelector } from 'react-redux';\nimport { selectAllSummaryReports } from 'redux/reports/selectors';\nimport {\n  Wrapper,\n  Text,\n  Sum,\n  ExpensesContainer,\n  IncomeContainer,\n  Line,\n} from './ReportsMonthBalance.styled';\nimport { useTranslation } from 'react-i18next';\nconst ReportsMonthBalance = () => {\n  const summaryReports = useSelector(selectAllSummaryReports);\nconst { t } = useTranslation();\n  return (\n    <Wrapper>\n      {summaryReports.map((item, index) => {\n        if (item.operation === 'expenses') {\n          return (\n            <ExpensesContainer key={index}>\n              <Text>{ t('button.Expenses') }:</Text>\n              <Sum color=\"negative\">\n                - {item.sum === 0 ? '00' : item.sum}.00 UAH.\n              </Sum>\n            </ExpensesContainer>\n          );\n        }\n        return null;\n      })}\n\n      <Line></Line>\n\n      {summaryReports.map((item, index) => {\n        if (item.operation === 'income') {\n          return (\n            <IncomeContainer key={index}>\n              <Text>{ t('button.Income') }:</Text>\n              <Sum color=\"positive\">\n                + {item.sum === 0 ? '00' : item.sum}.00 UAH.\n              </Sum>\n            </IncomeContainer>\n          );\n        }\n        return null;\n      })}\n    </Wrapper>\n  );\n};\nexport default ReportsMonthBalance;\n","import styled from 'styled-components';\n\nimport DEVICE from 'constants/deviceSize';\nimport { TRANSITION } from 'constants/constants';\nconst { duration, timing, delay } = TRANSITION;\n\nexport const ReportItemButton = styled.li`\n  padding-bottom: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  flex-direction: column;\n  width: 92px;\n  border-bottom: 1px solid #e0e5eb;\n\n  @media ${DEVICE.tablet} {\n    border-bottom: none;\n    padding-bottom: 0px;\n    width: 90px;\n  }\n`;\n\nexport const Sum = styled.p`\n  text-align: center;\n  font-size: 12px;\n  line-height: 1.17;\n\n  letter-spacing: 0.04em;\n  text-transform: uppercase;\n\n  color: ${p => p.theme.mainTextColor};\n  margin-bottom: 5px;\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n  z-index: 1;\n`;\n\nexport const ButtonReport = styled.button`\n  cursor: pointer;\n  height: 60px;\n  max-width: 60px;\n\n  background-color: transparent;\n  border: none;\n  margin-bottom: 5px;\n\n  &:hover > div {\n    background-color: ${p => p.theme.chartLight};\n    transform: scale(1.1);\n  }\n\n  &:focus,\n  &:hover svg {\n    transform: scale(1.1);\n    fill: ${p => p.theme.accentColor};\n  }\n\n  & > div {\n    z-index: -1;\n    display: block;\n    width: 59px;\n    height: 46px;\n    transition: background-color ${duration} ${timing} ${delay},\n      transform ${duration} ${timing} ${delay};\n\n    background-color: ${p =>\n      p.isActive\n        ? `${p.theme.chartLight}`\n        : `${p.theme.tableHeadBackgroundColor}`};\n    border-radius: 20px;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n  }\n\n  & > svg {\n    transition: fill ${duration} ${timing} ${delay},\n      transform ${duration} ${timing} ${delay};\n    z-index: 1;\n\n    fill: ${p =>\n      p.isActive ? `${p.theme.accentColor}` : `${p.theme.iconColor}`};\n  }\n`;\n\nexport const Type = styled.p`\n  flex-grow: 1;\n  text-align: center;\n  font-size: 12px;\n  line-height: 1.17;\n\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n\n  color: ${p => p.theme.mainTextColor};\n`;\n","import Icons from 'images/icons-sprite.svg';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCurrentPeriod } from 'redux/reports/selectors';\nimport { getItemsCategoryReports } from 'redux/reports/operations';\nimport {\n  ReportItemButton,\n  Sum,\n  Wrapper,\n  ButtonReport,\n  Type,\n} from './ReportItem.styled';\nimport { useEffect } from 'react';\n\nexport const ReportItem = ({ sum, category, type, setIsActive, isActive }) => {\n  const sumToFixed = sum.toFixed(2);\n  const dispatch = useDispatch();\n  const currentPeriod = useSelector(selectCurrentPeriod);\n\n  const handleClick = e => {\n    setIsActive(e.currentTarget.dataset.set);\n    dispatch(\n      getItemsCategoryReports({\n        ...currentPeriod,\n        operation: type,\n        category,\n      })\n    );\n  };\n\n  useEffect(() => {\n    if (isActive === true) {\n      dispatch(\n        getItemsCategoryReports({\n          ...currentPeriod,\n          operation: type,\n          category,\n        })\n      );\n      return;\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isActive, currentPeriod]);\n\n  const getIconKey = category => {\n    if (category.toLowerCase() === 'communal, communication') {\n      return 'communal';\n    }\n    if (category.toLowerCase() === 'sports, hobbies') {\n      return 'sports';\n    }\n    return category.toLowerCase();\n  };\n\n  return (\n    <ReportItemButton>\n      <Sum>{sumToFixed}</Sum>\n      <Wrapper>\n        <ButtonReport\n          data-set={category.toLowerCase()}\n          onClick={e => handleClick(e)}\n          isActive={isActive}\n        >\n          <svg width=\"60\" height=\"60\">\n            <use href={`${Icons}#icon-${type}-${getIconKey(category)}`}></use>\n          </svg>\n          <div></div>\n        </ButtonReport>\n      </Wrapper>\n      <Type>{category}</Type>\n    </ReportItemButton>\n  );\n};\n","//   import styled from 'styled-components';\nimport styled from 'styled-components';\nimport DEVICE from 'constants/deviceSize';\nimport { TRANSITION } from 'constants/constants';\nconst { duration, timing, delay } = TRANSITION;\n\nexport const Section = styled.div`\n  margin: 0 auto;\n\n  background-color: ${p => p.theme.headerColor};\n\n  width: 100%;\n  margin-bottom: 32px;\n\n  @media ${DEVICE.tablet} {\n    padding: 20px 0;\n    box-shadow: 0px 10px 60px ${p => p.theme.sectionShadow};\n    border-radius: 30px;\n  }\n  @media ${DEVICE.laptop} {\n    margin-bottom: 37px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  @media ${DEVICE.tablet} {\n    width: 623px;\n    margin: 0 auto;\n  }\n`;\n\nexport const Switcher = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const BtnArrow = styled.button`\n  cursor: pointer;\n\n  height: 20px;\n  width: 15px;\n\n  justify-content: center;\n  align-items: center;\n  display: flex;\n\n  background-color: transparent;\n  border: none;\n  transition: transform ${duration} ${timing} ${delay};\n  &:hover,\n  &:focus {\n    transform: scale(0.9);\n  }\n`;\n\nexport const Title = styled.p`\n  text-align: center;\n  font-weight: 700;\n  width: 98px;\n  font-size: 14px;\n  line-height: 1.14;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n\n  color: ${p => p.theme.tableHeadTextColor};\n`;\n\nexport const ReportList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  gap: 20px 0px;\n\n  margin: 0 auto;\n  overflow: hidden;\n  width: 100%;\n\n  @media ${DEVICE.tablet} {\n    gap: 40px 15px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const MessageText = styled.p`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.14;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  letter-spacing: 0.02em;\n\n  color: ${p => p.theme.mainTextColor};\n`;\n","import { MessageText } from './Message.styled';\n\nexport const Message = ({ text }) => <MessageText>{text}</MessageText>;\n","import Icons from 'images/icons-sprite.svg';\n\nimport { ReportItem } from 'components/ReportItem/ReportItem';\nimport { useEffect, useState } from 'react';\n\nimport {\n  Section,\n  Wrapper,\n  BtnArrow,\n  Switcher,\n  Title,\n  ReportList,\n} from './ReportsMonthSummary.styled';\nimport { useSelector } from 'react-redux';\nimport { selectCategoryReports } from 'redux/reports/selectors';\n\nimport { Cabbage } from 'components/UI/Cabbage/Cabbage';\nimport { Message } from 'components/UI/Message/Message';\n\nconst ReportsMonthSummary = ({ reportType, toggleType }) => {\n  const [array, setArray] = useState([]);\n  const categoryItems = useSelector(selectCategoryReports);\n  const [isActive, setIsActive] = useState('');\n\n  useEffect(() => {\n    if (categoryItems.length > 0) {\n      const sortArray = [...categoryItems].sort((a, b) =>\n        a.sum < b.sum ? 1 : -1\n      );\n      setArray(sortArray);\n      setIsActive(sortArray[0].category.toLowerCase());\n    } else setArray([]);\n  }, [categoryItems]);\n\n  return (\n    <Section>\n      <Wrapper>\n        <Switcher>\n          <BtnArrow onClick={() => toggleType()}>\n            <svg width=\"10\" height=\"15\">\n              <use href={`${Icons}#icon-arrow-left`}></use>\n            </svg>\n          </BtnArrow>\n          <Title>{reportType}</Title>\n          <BtnArrow onClick={() => toggleType()}>\n            <svg width=\"10\" height=\"15\">\n              <use href={`${Icons}#icon-arrow-right`}></use>\n            </svg>\n          </BtnArrow>\n        </Switcher>\n        {!array.length ? (\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Message text={`You have no ${reportType} for this period.`} />\n            <Cabbage />\n          </div>\n        ) : (\n          <ReportList>\n            {array.map(item => (\n              <ReportItem\n                key={item.category}\n                sum={item.sum}\n                category={item.category}\n                type={reportType.toLowerCase()}\n                setIsActive={setIsActive}\n                isActive={\n                  isActive === item.category.toLowerCase() ? true : false\n                }\n              />\n            ))}\n          </ReportList>\n        )}\n      </Wrapper>\n    </Section>\n  );\n};\n\nexport default ReportsMonthSummary;\n","import styled from 'styled-components';\n\nimport DEVICE from 'constants/deviceSize';\n\nexport const Wrapper = styled.div`\n  height: 422px;\n  background-color: ${p => p.theme.headerColor};\n\n  @media ${DEVICE.tablet} {\n    padding: 20px 138px;\n    border-radius: 30px;\n    box-shadow: 0px 10px 60px ${p => p.theme.sectionShadow};\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n} from 'chart.js/auto';\n\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { Wrapper } from './ReportsChart.styled';\nimport {\n  selectCurrentPeriod,\n  selectItemsByCategory,\n} from 'redux/reports/selectors';\n\nChartJS.register(CategoryScale, LinearScale, BarElement);\n\nconst ReportsChart = () => {\n  const [items, setItems] = useState([]);\n  const [maxCount, setMaxCount] = useState('');\n  const isScreenMorePhone = useMediaQuery('(min-width: 768px)');\n  const ticksFontSize = isScreenMorePhone ? 12 : 10;\n  const itemsByCategory = useSelector(selectItemsByCategory);\n  const currentPeriod = useSelector(selectCurrentPeriod);\n\n  useEffect(() => {\n    if (itemsByCategory.length > 0) {\n      const sortArray = [...itemsByCategory].sort((a, b) =>\n        a.sum < b.sum ? 1 : -1\n      );\n      setMaxCount(sortArray[0].sum);\n      setItems(sortArray.slice(0, 10));\n    } else setItems([]);\n  }, [itemsByCategory, currentPeriod]);\n\n  const userData = {\n    labels: items.map(data =>\n      data.description.length > 15\n        ? `${data.description.slice(0, 11)}...`\n        : data.description\n    ),\n    datasets: [\n      {\n        label: '',\n        data: items.map(data => data.sum),\n        backgroundColor: ['#FF751D', '#FFDAC0'],\n        borderRadius: 10,\n        borderWidth: 1,\n        barMargin: 1,\n      },\n    ],\n  };\n\n  let delayed;\n  const options = {\n    maintainAspectRatio: false,\n    animation: {\n      onComplete: () => {\n        delayed = true;\n      },\n      delay: context => {\n        let delay = 20;\n        if (context.type === 'data' && context.mode === 'default' && !delayed) {\n          delay = context.dataIndex * 900 + context.datasetIndex * 2000;\n        }\n        return delay;\n      },\n    },\n    responsive: true,\n    indexAxis: isScreenMorePhone ? 'x' : 'y',\n    plugins: {\n      legend: {\n        display: false,\n      },\n\n      datalabels: {\n        align: !isScreenMorePhone ? '0' : 'end',\n        anchor: 'end',\n        offset: !isScreenMorePhone ? '8' : '',\n        font: {\n          size: ticksFontSize,\n        },\n\n        clamp: false,\n        formatter: function (value) {\n          return `${value} UAH`;\n        },\n      },\n    },\n    barThickness: isScreenMorePhone ? '38' : '18',\n\n    scales: {\n      x: {\n        suggestedMax: maxCount * 1.04,\n        stacked: true,\n        border: {\n          display: false,\n        },\n        grid: {\n          drawOnChartArea: false,\n          drawTicks: false,\n        },\n        ticks: {\n          LayoutPosition: 'top',\n          beginAtZero: true,\n          display: isScreenMorePhone,\n          font: {\n            size: ticksFontSize,\n          },\n        },\n      },\n      y: {\n        suggestedMax: maxCount * 1.04,\n        stacked: true,\n        border: {\n          display: false,\n        },\n        grid: {\n          drawOnChartArea: true,\n          display: isScreenMorePhone,\n          drawBorder: false,\n        },\n        ticks: {\n          LayoutPosition: 'left',\n          display: !isScreenMorePhone,\n          font: {\n            size: ticksFontSize,\n          },\n          labelOffset: -12,\n          mirror: true,\n          align: 'end',\n          padding: 0,\n        },\n      },\n    },\n  };\n\n  return (\n    <>\n      {items.length > 0 ? (\n        <Wrapper>\n          <Bar data={userData} options={options} plugins={[ChartDataLabels]} />\n        </Wrapper>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default ReportsChart;\n","import ReportsPageWrapper from './ReportsPage.styled';\nimport ReportsNav from 'components/ReportsNav/ReportsNav';\nimport { Background } from 'components/UI/Background/Background';\nimport ReportsMonthBalance from 'components/ReportsMonthBalance/ReportsMonthBalance';\nimport ReportsMonthSummary from 'components/ReportsMonthSummary/ReportsMonthSummary';\nimport ReportsChart from 'components/ReportsChart/ReportsChart';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectCurrentPeriod } from 'redux/reports/selectors';\nimport { useEffect } from 'react';\nimport OPERATION_TYPES from 'constants/constants';\nimport {\n  getAllSummaryReports,\n  getCategoryReports,\n} from 'redux/reports/operations';\nimport { selectOperationType } from 'redux/transaction/selectors';\nimport { setOperationType } from 'redux/transaction/slice';\n\nconst ReportsPage = () => {\n  const currentPeriod = useSelector(selectCurrentPeriod);\n  const operation = useSelector(selectOperationType);\n\n  const dispatch = useDispatch();\n\n  const toggleType = () => {\n    if (operation === OPERATION_TYPES.expenses) {\n      return dispatch(setOperationType(OPERATION_TYPES.incomes));\n    }\n    return dispatch(setOperationType(OPERATION_TYPES.expenses));\n  };\n\n  useEffect(() => {\n    dispatch(getAllSummaryReports(currentPeriod));\n    dispatch(getCategoryReports({ ...currentPeriod, operation }));\n  }, [dispatch, currentPeriod, operation]);\n\n  return (\n    <>\n      <Background />\n      <ReportsPageWrapper>\n        <ReportsNav />\n        <ReportsMonthBalance />\n        <ReportsMonthSummary reportType={operation} toggleType={toggleType} />\n        <ReportsChart />\n      </ReportsPageWrapper>\n    </>\n  );\n};\n\nexport default ReportsPage;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectTransactions = state => state.transactions.transactions;\nexport const selectSummary = state => state.transactions.summary;\nexport const selectError = state => state.transactions.error;\nexport const selectIsLoading = state => state.transactions.isLoading;\nexport const selectOperationType = state => state.transactions.operationType;\n\nexport const getSelectTransactions = createSelector(\n    [selectTransactions],\n    transactions => {\n        const sortedTransactions = [...transactions].sort((a, b) => \n         b.createdAt.localeCompare(a.createdAt));\n        return sortedTransactions;\n    }\n);\n"],"names":["duration","TRANSITION","timing","delay","Wrapper","styled","DEVICE","Title","p","theme","lightGreyColor","Form","Input","tableHeadTextColor","headerColor","Button","whiteTextColor","accentColor","Label","InputContainer","useState","value","setValue","currentBalance","useSelector","selectBalance","firstBalance","selectFirstBalance","dispatch","useDispatch","t","useTranslation","useEffect","onSubmit","e","preventDefault","setBalance","balance","target","elements","type","readOnly","name","pattern","onChange","BackgroundGrey","tableHeadBackgroundColor","headerBoxShadow","BackgroundWhite","AnimateBackground","white","Cabbage","CabbageContainer","Background","position","letDown","keyframes","increase","LeftCabbageWrapper","RightCabbageWrapper","bubble","Item","cabbageSvgColor","alt","href","Icons","CabbageList","width","height","BackLink","Link","mainTextColor","to","Balance","ContainerPeriod","Text","Date","newDate","setNewDate","setCurrentPeriod","month","format","year","onClick","prevDate","subMonths","LeftIcon","nextDate","addMonths","RightIcon","Container","useMediaQuery","ReportsCurrentPeriod","selectCurrentPeriod","state","reports","currentPeriod","selectAllSummaryReports","allSummaryReports","selectCategoryReports","categoryReports","selectItemsByCategory","itemsByCategory","sectionShadow","Sum","color","incomesTextColor","ExpensesContainer","IncomeContainer","Line","summaryReports","map","item","index","operation","sum","ReportItemButton","ButtonReport","chartLight","isActive","iconColor","Type","ReportItem","category","setIsActive","sumToFixed","toFixed","getItemsCategoryReports","toLowerCase","currentTarget","dataset","set","handleClick","getIconKey","Section","Switcher","BtnArrow","ReportList","MessageText","Message","text","reportType","toggleType","array","setArray","categoryItems","length","sortArray","sort","a","b","style","display","justifyContent","flexDirection","alignItems","ChartJS","CategoryScale","LinearScale","BarElement","items","setItems","maxCount","setMaxCount","isScreenMorePhone","ticksFontSize","slice","delayed","userData","labels","data","description","datasets","label","backgroundColor","borderRadius","borderWidth","barMargin","options","maintainAspectRatio","animation","onComplete","context","mode","dataIndex","datasetIndex","responsive","indexAxis","plugins","legend","datalabels","align","anchor","offset","font","size","clamp","formatter","barThickness","scales","x","suggestedMax","stacked","border","grid","drawOnChartArea","drawTicks","ticks","LayoutPosition","beginAtZero","y","drawBorder","labelOffset","mirror","padding","ChartDataLabels","selectOperationType","getAllSummaryReports","getCategoryReports","OPERATION_TYPES","setOperationType","selectSummary","transactions","summary","selectIsLoading","isLoading","operationType","getSelectTransactions","createSelector","createdAt","localeCompare"],"sourceRoot":""}