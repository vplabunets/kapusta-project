{"version":3,"file":"static/js/307.901cead2.chunk.js","mappings":"sMAIaA,EAAiBC,EAAAA,GAAAA,IAAH,wXAOL,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,wBAAZ,IAKP,SAAAF,GAAC,OAAIA,EAAEC,MAAME,eAAZ,GAGNC,EAAAA,EAAAA,OAGAA,EAAAA,EAAAA,QAKEC,EAAkBN,EAAAA,GAAAA,IAAH,gNAGjBK,EAAAA,EAAAA,Q,UCxBEE,EAAoB,SAAC,GAChC,OAD8C,EAAZC,OAG9B,SAACF,EAAD,WACE,SAACG,EAAA,EAAD,OAKJ,SAACV,EAAD,WACE,SAACU,EAAA,EAAD,KAGL,C,+ECjBYC,E,QAAYV,GAAAA,IAAH,oJ,UCwBtB,EApBgB,SAAC,GAAiC,IAAD,IAA9BW,MAAAA,OAA8B,MAAtB,GAAsB,MAAlBC,OAAAA,OAAkB,MAAT,GAAS,EAC/C,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,UAAU,oBACVC,YAAa,EACbH,MAAOA,EACPC,OAAQA,EACRG,MAAM,UACNC,eAAe,aAItB,C,gTCbOC,EAA4BC,EAAAA,EAAAA,SAAlBC,EAAkBD,EAAAA,EAAAA,OAAVE,EAAUF,EAAAA,EAAAA,MAEvBG,EAAcrB,EAAAA,GAAAA,IAAH,2UAEF,SAAAC,GAAC,OAAIA,EAAEC,MAAMoB,WAAZ,GAOZjB,EAAAA,EAAAA,OAMAA,EAAAA,EAAAA,QAKEkB,EAAavB,EAAAA,GAAAA,EAAH,mPASZ,SAAAC,GAAC,OAAIA,EAAEC,MAAMsB,aAAZ,GAEDnB,EAAAA,EAAAA,QAMEoB,EAAezB,EAAAA,GAAAA,EAAH,ikBAOH,SAAAC,GAAC,OAAIA,EAAEC,MAAMwB,cAAZ,IAUZ,SAAAzB,GAAC,OAAIA,EAAEC,MAAMyB,kBAAZ,GAEcV,EAAYE,EAAUC,GAEZ,SAAAnB,GAAC,OAAIA,EAAEC,MAAM0B,YAAZ,IAcxBC,EAAY7B,EAAAA,GAAAA,EAAH,iOAQX,SAAAC,GAAC,OAAIA,EAAEC,MAAMsB,aAAZ,GAEDnB,EAAAA,EAAAA,QAMEyB,EAAgB9B,EAAAA,GAAAA,MAAH,kUAOf,SAAAC,GAAC,OAAIA,EAAEC,MAAMyB,kBAAZ,GAIDtB,EAAAA,EAAAA,QASE0B,GAAQ/B,EAAAA,EAAAA,IAAOgC,EAAAA,GAAPhC,CAAH,wbACC,SAAAC,GAAC,OAAIA,EAAEC,MAAM+B,WAAZ,IASE,SAAAhC,GAAC,OAAIA,EAAEC,MAAMwB,cAAZ,IAIZ,SAAAzB,GAAC,OAAIA,EAAEC,MAAMsB,aAAZ,IAUCU,EAAkBlC,EAAAA,GAAAA,IAAH,2LAKjBK,EAAAA,EAAAA,QAME8B,EAAanC,EAAAA,GAAAA,IAAH,0YASX,SAAAC,GAAC,OAAIA,EAAEC,MAAMsB,aAAZ,IAcAY,EAAkBpC,EAAAA,GAAAA,IAAH,mIAQfqC,EAAiBrC,EAAAA,GAAAA,OAAH,sZAOhB,SAAAC,GAAC,OAAIA,EAAEC,MAAMsB,aAAZ,GAMcP,EAAYE,EAAUC,GACZ,SAAAnB,GAAC,OAAIA,EAAEC,MAAM0B,YAAZ,IAKxB,SAAA3B,GAAC,OAAIA,EAAEC,MAAMyB,kBAAZ,ICtMNV,EAA4BC,EAAAA,EAAAA,SAAlBC,GAAkBD,EAAAA,EAAAA,OAAVE,GAAUF,EAAAA,EAAAA,MAEvBoB,GAAUtC,EAAAA,GAAAA,IAAH,sJAKTK,EAAAA,EAAAA,QAKEkC,GAAavC,EAAAA,GAAAA,OAAH,gaAaGiB,EAAYE,GAAUC,IAanCoB,GAAOxC,EAAAA,GAAAA,GAAH,qNAUN,SAAAC,GAAC,OAAIA,EAAEC,MAAMsB,aAAZ,IAGCU,GAAkBlC,EAAAA,GAAAA,IAAH,mH,WC1BtByC,GAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KACJE,MAAM,iBACNC,SAAS,8BAGRC,GAAgB,CACpBF,MAAO,IAGIG,GAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACpBC,GAAcC,EAAAA,EAAAA,KAAdD,UACFE,GAAWC,EAAAA,EAAAA,MAETC,GAAMC,EAAAA,EAAAA,MAAND,EACFE,EAAOF,EAAE,QAEf,OACE,WAACf,GAAD,YACE,UAACC,GAAD,CAAYiB,QAAS,kBAAMR,GAAW,EAAjB,EAArB,UACE,2BACE,iBAAKS,KAAI,UAAKC,EAAAA,EAAL,2BAGb,WAAClB,GAAD,eAAQa,EAAE,yBACV,UAAC,KAAD,CACEP,cAAeA,GACfa,SAAU,SAAAC,GACRT,GAASU,EAAAA,EAAAA,IAAcD,IACvBZ,GAAW,EACZ,EACDc,iBAAkBrB,GANpB,SAQG,gBACCmB,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,WAAC,KAAD,CAAMC,aAAa,MAAMV,SAAUQ,EAAnC,WACE,WAACrC,EAAD,CAAewC,QAAQ,QAAvB,oBAEE,UAACvC,EAAD,CACEwC,KAAK,QACLC,KAAK,QACLC,YAAY,iBACZb,OAAQA,EAAOhB,MACf8B,SAAUT,EACVU,OAAQT,KAEV,UAAC9B,EAAD,UACG2B,EAAOnB,OAASoB,EAAQpB,OAASmB,EAAOnB,YAG7C,UAAC,GAAD,WACE,UAACgC,EAAA,EAAD,CACEL,KAAM,SACNxD,MAAO,SACP8D,OAAQ,OACRC,SAAUV,EAJZ,SAMGnB,GAAY,UAAC,IAAD,CAAStC,MAAO,GAAIC,OAAQ,KAAS2C,QA/BzD,MAuCR,E,WCtEKd,GAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KACJE,MAAM,iBACNC,SAAS,4BACZkC,SAAUrC,EAAAA,KACPsC,IAAI,EAAG,sBACPC,IAAI,GAAI,qBACRpC,SAAS,8BAGRC,GAAgB,CACpBF,MAAO,GACPmC,SAAU,IAgKZ,GA7JqB,WACnB,OAA8CG,EAAAA,EAAAA,WAAS,GAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KACA,GAAgDF,EAAAA,EAAAA,WAAS,GAAzD,eAAOG,EAAP,KAAyBC,EAAzB,KACMnC,GAAWC,EAAAA,EAAAA,MACTC,GAAMC,EAAAA,EAAAA,MAAND,EACAJ,GAAcC,EAAAA,EAAAA,KAAdD,UAwBR,OACE,UAACsC,EAAA,MAAD,CACEC,QAAS,CAAEC,QAAS,EAAGC,MAAO,IAC9BC,QAAS,CAAEF,QAAS,EAAGC,MAAO,GAC9BE,WAAY,CAAE3E,SAAU,IAH1B,UAKE,UAACI,EAAD,UACI8D,GA+GA,UAACpC,GAAD,CACEN,iBAAkBA,GAAiBG,MACnCI,WAAYoC,KAhHd,6BACE,UAACS,GAAA,EAAD,CAAkBC,SAAS,YAC3B,WAACvE,EAAD,WAAa8B,EAAE,2BAAf,QACA,WAAC5B,EAAD,CAAcgC,KAAK,qEAAnB,WACE,2BACE,iBAAKA,KAAI,UAAKC,EAAAA,EAAL,yBAFb,aAMA,WAAC7B,EAAD,WACGwB,EAAE,0BADL,KACkCA,EAAE,sBADpC,QAGA,UAAC,KAAD,CACEP,cAAeA,GACfa,SAAU,SAAAC,GAAM,OAAIT,GAAS4C,EAAAA,EAAAA,IAAMnC,GAAnB,EAChBE,iBAAkBrB,GAHpB,SAKG,gBACCmB,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aACA4B,EARD,EAQCA,YARD,OAUC,WAAC,KAAD,CAAM3B,aAAa,MAAMV,SAAUQ,EAAnC,WACE,WAACrC,EAAD,CAAewC,QAAQ,QAAvB,oBAEE,UAACvC,EAAD,CACEwC,KAAK,QACLC,KAAK,QACLC,YAAY,iBACZb,OAAQA,EAAOhB,MACf8B,SAAUT,EACVU,OAAQT,KAEV,UAAC9B,EAAD,UACG2B,EAAOnB,OAASoB,EAAQpB,OAASmB,EAAOnB,YAG7C,WAACd,EAAD,CAAewC,QAAQ,WAAvB,UACGjB,EAAE,yBADL,KAEE,WAAClB,EAAD,YACE,UAACJ,EAAD,CACEwC,KAAMc,EAAmB,OAAS,WAClCb,KAAK,WACLC,YAAapB,EAAE,yBACfO,OAAQA,EAAOmB,SACfL,SAAUT,EACVU,OAAQT,KAEV,oBACEK,KAAK,SACLf,QAAS,kBAAM8B,GAAqBD,EAA3B,EAFX,UAIE,2BACE,iBACE5B,KACkB,UACTC,EAAAA,EADP2B,EAAgB,0CAQ1B,UAACjD,EAAD,UACG2B,EAAOgB,UAAYf,EAAQe,UAAYhB,EAAOgB,YAEjD,WAAC1C,EAAD,CACEkC,KAAK,SACLf,QAAS,kBAAM4B,GAAmB,EAAzB,EAFX,UAIG/B,EAAE,qCAJL,WAOF,WAACnB,EAAD,YACE,UAAC0C,EAAA,EAAD,CACEL,KAAM,SACNxD,MAAO,SACP8D,OAAQ,OACRC,SAAUV,EAJZ,SAMGnB,GACC,UAAC,IAAD,CAAStC,MAAO,GAAIC,OAAQ,KAE5ByC,EAAE,0BAGN,UAACuB,EAAA,EAAD,CACEL,KAAM,SACNxD,MAAO,OACP8D,OAAQ,OACRC,SAAUV,EACVZ,QAAS,kBA9Hb,SAACO,EAAQH,EAAQoC,GAC/B,OAAIjC,EAAOnB,OAASmB,EAAOgB,SAClBkB,EAAAA,GAAAA,QAAc,4BAA6B,CAChDH,SAAUG,EAAAA,GAAAA,SAAAA,UACV/F,MAAO,UACPgG,cAAc,IAGbtC,EAAOhB,OAAUgB,EAAOmB,SAOzBnB,EAAOhB,OAASgB,EAAOmB,UACzB5B,GAASgD,EAAAA,EAAAA,IAASvC,SAClBoC,UAFF,EANSC,EAAAA,GAAAA,QAAc,6BAA8B,CACjDH,SAAUG,EAAAA,GAAAA,SAAAA,UACV/F,MAAO,UACPgG,cAAc,GAQnB,CA0GkC1C,CAAQO,EAAQH,EAAQoC,EAA9B,EALX,SAOG/C,GACC,UAAC,IAAD,CAAStC,MAAO,GAAIC,OAAQ,KAE5ByC,EAAE,oCApFX,UAqGd,E,sBCpMY+C,GAAkBpG,EAAAA,GAAAA,IAAH,oQAOjBK,EAAAA,EAAAA,OAIAA,EAAAA,EAAAA,QAOEgG,GAAYrG,EAAAA,GAAAA,IAAH,wqBAIXK,EAAAA,EAAAA,OAKAA,EAAAA,EAAAA,QAOC,SAAAJ,GAAC,OAAIA,EAAEC,MAAMyB,kBAAZ,GAEAtB,EAAAA,EAAAA,OAIAA,EAAAA,EAAAA,QAWA,SAAAJ,GAAC,OAAIA,EAAEC,MAAMsB,aAAZ,GAEDnB,EAAAA,EAAAA,QAQAiG,GAAmBtG,EAAAA,GAAAA,IAAH,yPAGlBK,EAAAA,EAAAA,OAUAA,EAAAA,EAAAA,QCZX,GA5CiB,WACf,IAAM8C,GAAWC,EAAAA,EAAAA,MACjB,GAAuBmD,EAAAA,EAAAA,MAAhBC,GAAP,gBACyBC,EAAAA,EAAAA,IAAYC,EAAAA,IAerC,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcJ,EAAaK,IAAI,eAChCD,IAILzD,GAAS2D,EAAAA,EAAAA,IAASF,IAClBzD,GAAS4D,EAAAA,EAAAA,OACV,GAAE,CAAC5D,EAAUqD,KAMZ,mCACE,UAACjG,GAAA,EAAD,KACA,WAAC6F,GAAD,YACE,UAACb,EAAA,MAAD,CACEC,QAAS,CAAEC,QAAS,EAAGuB,YAAa,IAAKC,OAAQ,KACjDtB,QAAS,CAAEF,QAAS,EAAGuB,WAAY,EAAGC,OAAQ,GAC9CrB,WAAY,CAAE3E,SAAU,IAH1B,UAKE,WAACoF,GAAD,YACE,iBAAKa,IAAI,WAAT,UACE,iBAAKzD,KAAI,UAAK0D,EAAAA,EAAL,wBAEX,gDAGJ,UAAC,GAAD,QAEF,WAACb,GAAD,YACE,UAAC7F,GAAA,EAAD,KACA,UAACA,GAAA,EAAD,CAASqF,UAAU,SAI1B,C","sources":["components/UI/AnimateBackground/AnimateBackground.styled.jsx","components/UI/AnimateBackground/AnimateBackground.jsx","components/UI/Loader/Loader.styled.jsx","components/UI/Loader/Loader.jsx","components/HomeAuthForm/HomeAuthForm.styled.jsx","components/ForgotModal/ForgotModal.styled.jsx","components/ForgotModal/ForgotModal.jsx","components/HomeAuthForm/HomeAuthForm.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport DEVICE from 'constants/deviceSize';\n\nexport const BackgroundGrey = styled.div`\n  z-index: -1;\n  width: 100%;\n  height: 342px;\n\n  position: absolute;\n  top: 0;\n  background-color: ${p => p.theme.tableHeadBackgroundColor};\n  border-bottom-left-radius: 20%;\n\n  overflow: hidden;\n\n  box-shadow: ${p => p.theme.headerBoxShadow}, 0px 4px 5px 0px rgb(0 0 0 / 14%),\n    0px 1px 10px 0px rgb(0 0 0 / 12%);\n\n  @media ${DEVICE.tablet} {\n    height: 582px;\n  }\n  @media ${DEVICE.laptop} {\n    height: 582.5px;\n  }\n`;\n\nexport const BackgroundWhite = styled.div`\n  display: none;\n\n  @media ${DEVICE.laptop} {\n    display: block;\n    z-index: -2;\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    bottom: -1px;\n\n    overflow: hidden;\n  }\n`;\n","import { PropTypes } from 'prop-types';\n\nimport { CabbageList } from '../Cabbage/Cabbage';\n\nimport { BackgroundGrey, BackgroundWhite } from './AnimateBackground.styled';\n\nexport const AnimateBackground = ({ white }) => {\n  if (white)\n    return (\n      <BackgroundWhite>\n        <CabbageList />\n      </BackgroundWhite>\n    );\n\n  return (\n    <BackgroundGrey>\n      <CabbageList />\n    </BackgroundGrey>\n  );\n};\n\nAnimateBackground.propTypes = {\n  white: PropTypes.bool,\n};\n","import styled from 'styled-components';\n\nexport const LoaderBox = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  z-index: 1;\n`;\n","import { PropTypes } from 'prop-types';\n\nimport { Oval } from 'react-loader-spinner';\n\nimport { LoaderBox } from './Loader.styled';\n\nconst Spinner = ({ width = 40, height = 40 }) => {\n  return (\n    <LoaderBox>\n      <Oval\n        ariaLabel=\"loading-indicator\"\n        strokeWidth={5}\n        width={width}\n        height={height}\n        color=\"#FF751D\"\n        secondaryColor=\"#a2a4b0\"\n      />\n    </LoaderBox>\n  );\n};\n\nSpinner.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n};\n\nexport default Spinner;\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nimport DEVICE from 'constants/deviceSize';\n\nimport { TRANSITION } from 'constants/constants';\nconst { duration, timing, delay } = TRANSITION;\n\nexport const MainWrapper = styled.div`\n  margin: 0 auto;\n  background-color: ${p => p.theme.headerColor};\n  max-width: 426px;\n\n  padding: 40px 20px;\n  box-shadow: 5px 10px 20px rgba(170, 178, 197, 0.4);\n  border-radius: 30px;\n\n  @media ${DEVICE.tablet} {\n    max-width: 426px;\n    width: 426px;\n    padding: 56px 83px;\n  }\n\n  @media ${DEVICE.laptop} {\n    margin: 117px 0 0;\n  }\n`;\n\nexport const GoogleText = styled.p`\n  width: 222px;\n  margin: 0 auto 16px;\n\n  font-size: 12px;\n  line-height: 1.17;\n  text-align: center;\n  letter-spacing: 0.04em;\n\n  color: ${p => p.theme.mainTextColor};\n\n  @media ${DEVICE.laptop} {\n    width: 100%;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const GoogleButton = styled.a`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 122px;\n  height: 40px;\n  margin: 0 auto 32px;\n  background-color: ${p => p.theme.googleBtnColor};\n  border: none;\n  border-radius: 26px;\n\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.14;\n  text-decoration: none;\n\n  letter-spacing: 0.02em;\n  color: ${p => p.theme.tableHeadTextColor};\n\n  transition: transform ${duration} ${timing} ${delay};\n\n  filter: drop-shadow(1px 3px 5px ${p => p.theme.buttonShadow});\n\n  &:hover,\n  &:focus {\n    transform: scale(0.9);\n  }\n\n  & svg {\n    width: 18px;\n    height: 18px;\n    margin-right: 10px;\n  }\n`;\n\nexport const LoginText = styled.p`\n  text-align: left;\n  margin-bottom: 16px;\n\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.04em;\n\n  color: ${p => p.theme.mainTextColor};\n\n  @media ${DEVICE.laptop} {\n    width: 250px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const AuthFormLabel = styled.label`\n  position: relative;\n  display: block;\n  font-size: 10px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n\n  color: ${p => p.theme.tableHeadTextColor};\n  :nth-of-type(2) {\n    margin-top: 20px;\n  }\n  @media ${DEVICE.tablet} {\n    font-size: 12px;\n    line-height: 1.16;\n    :nth-of-type(2) {\n      margin-top: 32px;\n    }\n  }\n`;\n\nexport const Input = styled(Field)`\n  outline-color: ${p => p.theme.accentColor};\n  font-family: inherit;\n  margin-top: 12px;\n  width: 100%;\n  height: 52px;\n  padding: 17px 19px;\n  outline: none;\n  border: none;\n  border-radius: 30px;\n  background-color: ${p => p.theme.googleBtnColor};\n  font-size: 14px;\n  line-height: 1.14;\n  letter-spacing: 0.04em;\n  color: ${p => p.theme.mainTextColor};\n\n  ::placeholder {\n    font-size: 14px;\n    line-height: 1.14;\n    letter-spacing: 0.04em;\n    color: #a6abb9;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 40px;\n  gap: 8px;\n  @media ${DEVICE.tablet} {\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nexport const EyeWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  & svg {\n    width: 20px;\n    height: 20px;\n    fill: ${p => p.theme.mainTextColor};\n  }\n  & button {\n    position: absolute;\n    top: 28px;\n    right: 19px;\n    width: 20px;\n    height: 20px;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n  }\n`;\n\nexport const ErrorValidation = styled.div`\n  font-size: 10px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n  color: #eb5757;\n  margin-top: 5px;\n`;\n\nexport const ReminderButton = styled.button`\n  position: absolute;\n  top: 100%;\n  right: 5px;\n  font-size: 10px;\n  line-height: 1, 2;\n  letter-spacing: 0.04em;\n  color: ${p => p.theme.mainTextColor};\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  padding: 5px;\n\n  transition: transform ${duration} ${timing} ${delay};\n  filter: drop-shadow(1px 3px 5px ${p => p.theme.buttonShadow});\n\n  &:hover,\n  &:focus {\n    transform: scale(0.9);\n    color: ${p => p.theme.tableHeadTextColor};\n  }\n`;\n","import styled from 'styled-components';\nimport DEVICE from 'constants/deviceSize';\nimport { TRANSITION } from 'constants/constants';\nconst { duration, timing, delay } = TRANSITION;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  padding-bottom: 79px;\n  flex-direction: column;\n  width: 240px;\n  @media ${DEVICE.tablet} {\n    width: 252px;\n  }\n`;\n\nexport const ButtonBack = styled.button`\n  position: relative;\n  top: 5px;\n  left: 0;\n  cursor: pointer;\n  background-color: transparent;\n  display: flex;\n  justify-content: center;\n  outline: none;\n  border: none;\n  width: 24px;\n  height: 24px;\n  margin-bottom: 79px;\n  transition: transform ${duration} ${timing} ${delay};\n\n  & svg {\n    width: 24px;\n    height: 24px;\n  }\n\n  &:hover,\n  &:focus {\n    transform: scale(0.9);\n  }\n`;\n\nexport const Text = styled.h2`\n  width: 100%;\n  display: block;\n\n  margin: 0 auto 16px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.17;\n  text-align: center;\n  letter-spacing: 0.04em;\n  color: ${p => p.theme.mainTextColor};\n`;\n\nexport const ButtonContainer = styled.div`\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { useDispatch } from 'react-redux';\nimport { PropTypes } from 'prop-types';\n\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { useTranslation } from 'react-i18next';\n\nimport { useAuth } from 'hooks/useAuth';\nimport { resetPassword } from 'redux/auth/operations';\n\nimport icon from 'images/icons-sprite.svg';\n\nimport Spinner from 'components/UI/Loader/Loader';\nimport { Button } from 'components/UI/Button/Button';\n\nimport {\n  Input,\n  AuthFormLabel,\n  ErrorValidation,\n} from '../HomeAuthForm/HomeAuthForm.styled';\n\nimport {\n  ButtonBack,\n  Text,\n  Wrapper,\n  ButtonContainer,\n} from './ForgotModal.styled';\n\nconst ValidationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email')\n    .required('This is a required field'),\n});\n\nconst initialValues = {\n  email: '',\n};\n\nexport const ForgotModal = ({ closeModal }) => {\n  const { isLoading } = useAuth();\n  const dispatch = useDispatch();\n\n  const { t } = useTranslation();\n  const send = t('Send');\n\n  return (\n    <Wrapper>\n      <ButtonBack onClick={() => closeModal(false)}>\n        <svg>\n          <use href={`${icon}#icon-arrow-back`}></use>\n        </svg>\n      </ButtonBack>\n      <Text> {t('Forgot modal text')}</Text>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={values => {\n          dispatch(resetPassword(values));\n          closeModal(false);\n        }}\n        validationSchema={ValidationSchema}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n        }) => (\n          <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <AuthFormLabel htmlFor=\"Email\">\n              Email:\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"your@email.com\"\n                values={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <ErrorValidation>\n                {errors.email && touched.email && errors.email}\n              </ErrorValidation>\n            </AuthFormLabel>\n            <ButtonContainer>\n              <Button\n                type={'submit'}\n                color={'accent'}\n                design={'home'}\n                disabled={isSubmitting}\n              >\n                {isLoading ? <Spinner width={30} height={30} /> : send}\n              </Button>\n            </ButtonContainer>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nForgotModal.propTypes = {\n  closeModal: PropTypes.func,\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useTranslation } from 'react-i18next';\nimport { Formik, Form } from 'formik';\nimport { motion } from 'framer-motion';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\n\nimport { useAuth } from 'hooks/useAuth';\nimport { logIn, register } from 'redux/auth/operations';\n\nimport { ForgotModal } from 'components/ForgotModal/ForgotModal';\nimport { Button } from 'components/UI/Button/Button';\nimport Spinner from 'components/UI/Loader/Loader';\nimport LanguageSwitcher from 'components/SettingsMenu/LanguageSwitcher';\nimport icon from 'images/icons-sprite.svg';\nimport {\n  MainWrapper,\n  GoogleText,\n  GoogleButton,\n  LoginText,\n  AuthFormLabel,\n  Input,\n  ButtonContainer,\n  EyeWrapper,\n  ErrorValidation,\n  ReminderButton,\n} from './HomeAuthForm.styled';\n\nconst ValidationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email')\n    .required('This is a required field'),\n  password: Yup.string()\n    .min(6, 'Password too short')\n    .max(50, 'Password too long')\n    .required('This is a required field'),\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst HomeAuthForm = () => {\n  const [openForgotModal, setOpenForgotModal] = useState(false);\n  const [showHidePassword, setShowHidePassword] = useState(false);\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const { isLoading } = useAuth();\n\n  const onClick = (errors, values, handleReset) => {\n    if (errors.email || errors.password)\n      return toast.warning('Both fields must be valid', {\n        position: toast.POSITION.TOP_RIGHT,\n        theme: 'colored',\n        pauseOnHover: true,\n      });\n\n    if (!values.email || !values.password)\n      return toast.warning('Both fields must be filled', {\n        position: toast.POSITION.TOP_RIGHT,\n        theme: 'colored',\n        pauseOnHover: true,\n      });\n\n    if (values.email && values.password) {\n      dispatch(register(values));\n      handleReset();\n      return;\n    }\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, scale: 0.5 }}\n      animate={{ opacity: 1, scale: 1 }}\n      transition={{ duration: 0.7 }}\n    >\n      <MainWrapper>\n        {!openForgotModal ? (\n          <div>\n            <LanguageSwitcher position=\"header\" />\n            <GoogleText>{t('registration.GoogleText')}:</GoogleText>\n            <GoogleButton href=\"https://kapusta-project-back-production.up.railway.app/auth/google\">\n              <svg>\n                <use href={`${icon}#icon-google-icon`}></use>\n              </svg>\n              Google\n            </GoogleButton>\n            <LoginText>\n              {t('registration.loginText')}, {t('registration.after')}:\n            </LoginText>\n            <Formik\n              initialValues={initialValues}\n              onSubmit={values => dispatch(logIn(values))}\n              validationSchema={ValidationSchema}\n            >\n              {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                isSubmitting,\n                handleReset,\n              }) => (\n                <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n                  <AuthFormLabel htmlFor=\"Email\">\n                    Email:\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder=\"your@email.com\"\n                      values={values.email}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    <ErrorValidation>\n                      {errors.email && touched.email && errors.email}\n                    </ErrorValidation>\n                  </AuthFormLabel>\n                  <AuthFormLabel htmlFor=\"password\">\n                    {t('registration.Password')}:\n                    <EyeWrapper>\n                      <Input\n                        type={showHidePassword ? 'text' : 'password'}\n                        name=\"password\"\n                        placeholder={t('registration.Password')}\n                        values={values.password}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={() => setShowHidePassword(!showHidePassword)}\n                      >\n                        <svg>\n                          <use\n                            href={\n                              showHidePassword\n                                ? `${icon}#icon-eye-closed`\n                                : `${icon}#icon-eye`\n                            }\n                          ></use>\n                        </svg>\n                      </button>\n                    </EyeWrapper>\n                    <ErrorValidation>\n                      {errors.password && touched.password && errors.password}\n                    </ErrorValidation>\n                    <ReminderButton\n                      type=\"button\"\n                      onClick={() => setOpenForgotModal(true)}\n                    >\n                      {t('registration.Forgot your password')}?\n                    </ReminderButton>\n                  </AuthFormLabel>\n                  <ButtonContainer>\n                    <Button\n                      type={'submit'}\n                      color={'accent'}\n                      design={'home'}\n                      disabled={isSubmitting}\n                    >\n                      {isLoading ? (\n                        <Spinner width={30} height={30} />\n                      ) : (\n                        t('registration.LOG IN')\n                      )}\n                    </Button>\n                    <Button\n                      type={'button'}\n                      color={'grey'}\n                      design={'home'}\n                      disabled={isSubmitting}\n                      onClick={() => onClick(errors, values, handleReset)}\n                    >\n                      {isLoading ? (\n                        <Spinner width={30} height={30} />\n                      ) : (\n                        t('registration.REGISTRATION')\n                      )}\n                    </Button>\n                  </ButtonContainer>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        ) : (\n          <ForgotModal\n            ValidationSchema={ValidationSchema.email}\n            closeModal={setOpenForgotModal}\n          />\n        )}\n      </MainWrapper>\n    </motion.div>\n  );\n};\n\nexport default HomeAuthForm;\n","import styled from 'styled-components';\n\nimport DEVICE from 'constants/deviceSize';\n\nexport const HomePageWrapper = styled.div`\n  padding: 0 20px;\n  margin: 0 auto;\n\n  display: flex;\n  flex-direction: column;\n\n  @media ${DEVICE.tablet} {\n    max-width: 426px;\n  }\n\n  @media ${DEVICE.laptop} {\n    align-items: center;\n    flex-direction: row;\n    justify-content: center;\n  }\n`;\n\nexport const TextGroup = styled.div`\n  margin-top: 86px;\n  margin-bottom: 50px;\n\n  @media ${DEVICE.tablet} {\n    margin-top: 80px;\n    margin-bottom: 80px;\n  }\n\n  @media ${DEVICE.laptop} {\n    margin-right: 157px;\n  }\n\n  & > svg {\n    width: 183px;\n    height: 46.34px;\n    fill: ${p => p.theme.tableHeadTextColor};\n\n    @media ${DEVICE.tablet} {\n      width: 306.52px;\n      height: 77.69px;\n    }\n    @media ${DEVICE.laptop} {\n      width: 377px;\n      height: 120px;\n    }\n  }\n  & > p {\n    font-weight: 700;\n    font-size: 13px;\n    line-height: 1.15;\n    letter-spacing: 0.15em;\n    text-transform: uppercase;\n    color: ${p => p.theme.mainTextColor};\n\n    @media ${DEVICE.tablet} {\n      font-size: 16px;\n      line-height: 1.19;\n      letter-spacing: 0.18em;\n    }\n  }\n`;\n\nexport const CabbageContainer = styled.div`\n  margin-left: 35px;\n\n  @media ${DEVICE.tablet} {\n    position: absolute;\n    left: 103px;\n    top: 826px;\n    margin-left: 0px;\n\n    z-index: -1;\n    display: flex;\n  }\n\n  @media ${DEVICE.laptop} {\n    left: 230px;\n    top: 658px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { motion } from 'framer-motion';\n\nimport { setToken } from 'redux/auth/slice';\nimport { refreshUser } from 'redux/auth/operations';\nimport { selectAccessToken } from 'redux/auth/selectors';\n\nimport Icon from 'images/icons-sprite.svg';\n\nimport HomeAuthForm from 'components/HomeAuthForm/HomeAuthForm';\nimport { Cabbage } from 'components/UI/Cabbage/Cabbage';\nimport { AnimateBackground } from 'components/UI/AnimateBackground/AnimateBackground';\n\nimport {\n  HomePageWrapper,\n  TextGroup,\n  CabbageContainer,\n} from './HomePage.styled';\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n  const [searchParams] = useSearchParams();\n  const reduxAccessToken = useSelector(selectAccessToken);\n\n  useEffect(() => {\n    const accessToken = searchParams.get('accessToken');\n    if (!accessToken) {\n      return;\n    }\n\n    dispatch(setToken(accessToken));\n    dispatch(refreshUser());\n  }, [dispatch, searchParams]);\n\n  if (reduxAccessToken === '' || reduxAccessToken === null) {\n  }\n\n  return (\n    <>\n      <AnimateBackground />\n      <HomePageWrapper>\n        <motion.div\n          initial={{ opacity: 0, translateX: -500, rotate: 360 }}\n          animate={{ opacity: 1, translateX: 0, rotate: 0 }}\n          transition={{ duration: 0.7 }}\n        >\n          <TextGroup>\n            <svg alt=\"mainLogo\">\n              <use href={`${Icon}#icon-logo-main`}></use>\n            </svg>\n            <p>Smart Finance</p>\n          </TextGroup>\n        </motion.div>\n        <HomeAuthForm />\n      </HomePageWrapper>\n      <CabbageContainer>\n        <Cabbage />\n        <Cabbage position={true} />\n      </CabbageContainer>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["BackgroundGrey","styled","p","theme","tableHeadBackgroundColor","headerBoxShadow","DEVICE","BackgroundWhite","AnimateBackground","white","Cabbage","LoaderBox","width","height","ariaLabel","strokeWidth","color","secondaryColor","duration","TRANSITION","timing","delay","MainWrapper","headerColor","GoogleText","mainTextColor","GoogleButton","googleBtnColor","tableHeadTextColor","buttonShadow","LoginText","AuthFormLabel","Input","Field","accentColor","ButtonContainer","EyeWrapper","ErrorValidation","ReminderButton","Wrapper","ButtonBack","Text","ValidationSchema","Yup","shape","email","required","initialValues","ForgotModal","closeModal","isLoading","useAuth","dispatch","useDispatch","t","useTranslation","send","onClick","href","icon","onSubmit","values","resetPassword","validationSchema","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","autoComplete","htmlFor","type","name","placeholder","onChange","onBlur","Button","design","disabled","password","min","max","useState","openForgotModal","setOpenForgotModal","showHidePassword","setShowHidePassword","motion","initial","opacity","scale","animate","transition","LanguageSwitcher","position","logIn","handleReset","toast","pauseOnHover","register","HomePageWrapper","TextGroup","CabbageContainer","useSearchParams","searchParams","useSelector","selectAccessToken","useEffect","accessToken","get","setToken","refreshUser","translateX","rotate","alt","Icon"],"sourceRoot":""}