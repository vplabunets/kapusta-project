{"version":3,"file":"static/js/755.2e4c66b6.chunk.js","mappings":"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","sources":["components/UI/AnimateBackground/AnimateBackground.styled.jsx","components/UI/AnimateBackground/AnimateBackground.jsx","components/UI/Cabbage/Cabbage.styled.jsx","components/UI/Cabbage/Cabbage.jsx","components/HomeAuthForm/HomeAuthForm.styled.jsx","components/HomeAuthForm/HomeAuthForm.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport device from 'constants/deviceSize';\n\nexport const BackgroundGrey = styled.div`\n  z-index: -1;\n  width: 100%;\n  height: 342px;\n\n  position: absolute;\n  top: 0;\n  background-color: #f5f6fb;\n  border-bottom-left-radius: 20%;\n\n  overflow: hidden;\n\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n\n  @media ${device.tablet} {\n    height: 582px;\n  }\n  @media ${device.laptop} {\n    height: 582.5px;\n  }\n`;\n\nexport const BackgroundWhite = styled.div`\n  display: none;\n\n  @media ${device.laptop} {\n    display: block;\n    z-index: -2;\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    bottom: -1px;\n\n    overflow: hidden;\n  }\n`;\n","import { CabbageList } from '../Cabbage/Cabbage';\nimport { BackgroundGrey, BackgroundWhite } from './AnimateBackground.styled';\n\nexport const AnimateBackground = ({ white }) => {\n  if (white)\n    return (\n      <BackgroundWhite>\n        <CabbageList />\n      </BackgroundWhite>\n    );\n\n  return (\n    <BackgroundGrey>\n      <CabbageList />\n    </BackgroundGrey>\n  );\n};\n","import styled from 'styled-components';\nimport device from 'constants/deviceSize';\nimport { keyframes } from '@emotion/css';\n\nconst letDown = keyframes`\n  from {\n    transform: translateY(0%);\n  }\n50% {\n    transform: translateY(20px);\n}\n  to {\n   transform: translateY(0%);\n  }\n`;\n\nconst increase = keyframes`\n  from {\n    width: 67px;\n        background-color: #f5f6fb;\n  }\n50% {\n    width: 80px;\n        background-color: #DBDBDB;\n}\n  to {\n    width: 67px;\n        background-color: #f5f6fb;\n  }\n`;\n\nexport const LeftCabbageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  & > svg {\n    width: 83px;\n    height: 89px;\n    margin-bottom: 20px;\n    animation: ${letDown} 4s linear infinite;\n  }\n\n  & > div {\n    display: block;\n\n    width: 67px;\n    height: 14px;\n    border-radius: 50%;\n    background-color: #f5f6fb;\n    animation: ${increase} 4s linear infinite;\n  }\n`;\n\nexport const RightCabbageWrapper = styled.div`\n  display: none;\n\n  @media ${device.tablet} {\n    display: flex;\n    flex-direction: column;\n\n    position: relative;\n    top: -16px;\n    left: 11px;\n\n    z-index: -1;\n\n    & > svg {\n      display: block;\n      width: 83px;\n      height: 89px;\n      margin-bottom: 20px;\n      animation: ${letDown} 4s linear infinite;\n    }\n\n    & > div {\n      display: block;\n\n      width: 67px;\n      height: 14px;\n      border-radius: 50%;\n      background-color: #f5f6fb;\n      animation: ${increase} 4s linear infinite;\n    }\n  }\n`;\n\nconst bubble = keyframes`\n  0%{\n        transform: translateY(0) rotate(0deg);\n        opacity: 1;\n        border-radius: 0;\n stroke: #DFE2EB;\n    }\n\n    50% {\n     \n    stroke: #DBDBDB;\n    }\n\n    100%{\n        transform: translateY(-150vw) rotate(750deg);\n        opacity: 0;\n        border-radius: 50%;\n\n    }\n`;\n\nexport const Item = styled.li`\n  position: absolute;\n  display: block;\n  animation: ${bubble} 20s linear infinite;\n  bottom: -85px;\n  opacity: 0;\n\n  &:nth-child(1) {\n    transform: rotate(-90deg);\n\n    left: 0%;\n    animation-delay: 8s;\n  }\n  &:nth-child(2) {\n    left: 20%;\n    animation-delay: 5s;\n  }\n  &:nth-child(3) {\n    left: 40%;\n    transform: rotate(90deg);\n    animation-delay: 7s;\n  }\n  &:nth-child(4) {\n    left: 60%;\n    transform: rotate(-90deg);\n    animation-delay: 11s;\n  }\n  &:nth-child(5) {\n    left: 80%;\n    transform: rotate(-180deg);\n    animation-delay: 13s;\n  }\n  &:nth-child(6) {\n    left: 99%;\n    transform: rotate(-90deg);\n    animation-delay: 3s;\n  }\n\n  @media ${device.tablet} {\n    &:nth-child(7) {\n      left: 50%;\n      animation-delay: 2s;\n    }\n\n    &:nth-child(8) {\n      left: 55%;\n      transform: rotate(-90deg);\n      animation-delay: 6s;\n    }\n    &:nth-child(9) {\n      left: 69%;\n      transform: rotate(-180deg);\n      animation-delay: 9s;\n    }\n    &:nth-child(10) {\n      left: 95%;\n      transform: rotate(-90deg);\n      animation-delay: 1s;\n    }\n    &:nth-child(11) {\n      left: 44%;\n      animation-delay: 4s;\n    }\n\n    &:nth-child(12) {\n      left: 85%;\n      transform: rotate(-90deg);\n      animation-delay: 15s;\n    }\n    &:nth-child(13) {\n      left: 38%;\n      transform: rotate(-120deg);\n      animation-delay: 3s;\n    }\n    &:nth-child(14) {\n      left: 90%;\n      transform: rotate(-120deg);\n      animation-delay: 17s;\n    }\n    &:nth-child(15) {\n      left: 15%;\n      transform: rotate(-120deg);\n      animation-delay: 10s;\n    }\n    &:nth-child(16) {\n      right: 65%;\n      transform: rotate(-120deg);\n      animation-delay: 6s;\n    }\n  }\n`;\n","import Icons from 'images/icons-sprite.svg';\n\nimport {\n  LeftCabbageWrapper,\n  RightCabbageWrapper,\n  Item,\n} from './Cabbage.styled';\n\nexport const Cabbage = ({ position }) => {\n  if (position) {\n    return (\n      <RightCabbageWrapper>\n        <svg alt=\"cabbage\">\n          <use href={`${Icons}#icon-cabbage-right`}></use>\n        </svg>\n        <div></div>\n      </RightCabbageWrapper>\n    );\n  }\n\n  return (\n    <LeftCabbageWrapper>\n      <svg alt=\"cabbage\">\n        <use href={`${Icons}#icon-cabbage-left`}></use>\n      </svg>\n      <div></div>\n    </LeftCabbageWrapper>\n  );\n};\n\nexport const CabbageList = () => {\n  return (\n    <ul>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n    </ul>\n  );\n};\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nimport device from 'constants/deviceSize';\n\nexport const MainWrapper = styled.div`\n  margin: 0 auto;\n  background-color: #ffffff;\n  max-width: 426px;\n\n  padding: 40px 20px;\n  box-shadow: 5px 10px 20px rgba(170, 178, 197, 0.4);\n  border-radius: 30px;\n\n  @media ${device.tablet} {\n    max-width: 426px;\n    width: 426px;\n    padding: 56px 83px;\n  }\n\n  @media ${device.laptop} {\n    margin: 117px 0 0;\n  }\n`;\n\nexport const GoogleText = styled.p`\n  width: 222px;\n  margin: 0 auto 16px;\n\n  font-size: 12px;\n  line-height: 1.17;\n  text-align: center;\n  letter-spacing: 0.04em;\n\n  color: #52555f;\n\n  @media ${device.laptop} {\n    width: 100%;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const GoogleButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 122px;\n  height: 40px;\n  margin: 0 auto 32px;\n  background-color: #f6f7fb;\n  border: none;\n  border-radius: 26px;\n  cursor: pointer;\n\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.14;\n\n  letter-spacing: 0.02em;\n  color: #000000;\n  transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  filter: drop-shadow(1px 3px 5px rgba(82, 85, 95, 0.15));\n\n  &:hover,\n  &:focus {\n    transform: scale(0.9);\n  }\n\n  & svg {\n    width: 18px;\n    height: 18px;\n    margin-right: 10px;\n  }\n`;\n\nexport const LoginText = styled.p`\n  text-align: left;\n  margin-bottom: 16px;\n\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.04em;\n\n  color: #52555f;\n\n  @media ${device.laptop} {\n    width: 250px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const AuthFormLabel = styled.label`\n  display: block;\n  margin-bottom: 12px;\n  font-size: 10px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n  color: #000000;\n  :nth-of-type(2) {\n    margin-top: 20px;\n  }\n  @media ${device.tablet} {\n    font-size: 12px;\n    line-height: 1.16;\n    :nth-of-type(2) {\n      margin-top: 32px;\n    }\n  }\n`;\n\nexport const Input = styled(Field)`\n  font-family: inherit;\n  margin-top: 12px;\n  width: 100%;\n  height: 52px;\n  padding: 17px 19px;\n  outline: none;\n  border: none;\n  border-radius: 30px;\n  background-color: #f6f7fb;\n  font-size: 14px;\n  line-height: 1.14;\n  letter-spacing: 0.04em;\n  color: #52555f;\n  ::placeholder {\n    font-size: 14px;\n    line-height: 1.14;\n    letter-spacing: 0.04em;\n    color: #a6abb9;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 0 4px;\n  padding-top: 28px;\n  gap: 8px;\n  @media ${device.tablet} {\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nexport const EyeWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  & svg {\n    width: 20px;\n    height: 20px;\n    fill: #52555f;\n  }\n  & button {\n    position: absolute;\n    top: 28px;\n    right: 19px;\n    width: 20px;\n    height: 20px;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n  }\n`;\n","import { Formik, Form } from \"formik\";\nimport { Button } from \"components/UI/Button/Button\";\nimport {\n  MainWrapper,\n  GoogleText,\n  GoogleButton,\n  LoginText,\n  AuthFormLabel,\n  Input,\n  ButtonContainer,\n  EyeWrapper\n} from \"./HomeAuthForm.styled\"\nimport icon from \"images/icons-sprite.svg\";\nimport { useState } from \"react\";\n\n\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n}\n\nconst HomeAuthForm = () => {\nconst [showHidePassword, setShowHidePassword] = useState(false);\n\n  const handleSubmit = (values, { resetForm }) => {\n    resetForm();\n  }\n\n  return (\n    <MainWrapper>\n        <GoogleText>\n          You can log in with your Google Account:\n        </GoogleText>\n            <GoogleButton\n              type={\"button\"}>\n            <svg>\n              <use href={`${icon}#icon-google-icon`}></use>\n            </svg>\n            Google\n            </GoogleButton>\n        <LoginText>\n          Or log in using an email and password, <br/> after registering:\n        </LoginText>\n          <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n            <Form autoComplete=\"off\">\n              <AuthFormLabel htmlFor=\"Email\">\n              Email:\n            <Input type=\"text\" name=\"email\" placeholder=\"your@email.com\" />\n              </AuthFormLabel>\n          <AuthFormLabel htmlFor=\"password\">\n            Password:\n              <EyeWrapper>\n                <Input type={showHidePassword ? \"text\" : \"password\"} name=\"password\" placeholder=\"Password\" />\n                <button type=\"button\" onClick={() => setShowHidePassword(!showHidePassword)}>\n                  <svg>\n                    <use href={showHidePassword ? `${icon}#icon-eye-closed`:`${icon}#icon-eye`}></use>\n                  </svg>\n                </button>\n              </EyeWrapper>\n          </AuthFormLabel>\n              <ButtonContainer>\n                  <Button\n                  type={\"submit\"}\n                  color={\"accent\"}\n                    design={\"home\"}>\n                    LOG IN\n                </Button>\n                  <Button\n                    type={\"submit\"}\n                    color={\"grey\"}\n                    design={\"home\"}>\n                    REGISTRATION\n                </Button>\n              </ButtonContainer>\n              </Form>\n          </Formik>\n    </MainWrapper>\n  )\n};\n\nexport default HomeAuthForm;\n\n","import styled from 'styled-components';\n\nimport device from 'constants/deviceSize';\n\nexport const HomePageWrapper = styled.div`\n  padding: 0 20px;\n  margin: 0 auto;\n\n  display: flex;\n  flex-direction: column;\n\n  @media ${device.tablet} {\n    max-width: 426px;\n  }\n\n  @media ${device.laptop} {\n    align-items: center;\n    flex-direction: row;\n    justify-content: center;\n  }\n`;\n\nexport const TextGroup = styled.div`\n  margin-top: 86px;\n  margin-bottom: 50px;\n\n  @media ${device.tablet} {\n    margin-top: 80px;\n    margin-bottom: 80px;\n  }\n\n  @media ${device.laptop} {\n    margin-right: 157px;\n  }\n\n  & > svg {\n    width: 183px;\n    height: 46.34px;\n\n    @media ${device.tablet} {\n      width: 306.52px;\n      height: 77.69px;\n    }\n    @media ${device.laptop} {\n      width: 377px;\n      height: 120px;\n    }\n  }\n  & > p {\n    font-weight: 700;\n    font-size: 13px;\n    line-height: 1.15;\n    letter-spacing: 0.15em;\n    text-transform: uppercase;\n    color: #52555f;\n\n    @media ${device.tablet} {\n      font-size: 16px;\n      line-height: 1.19;\n      letter-spacing: 0.18em;\n    }\n  }\n`;\n\nexport const CabbageContainer = styled.div`\n  margin-left: 35px;\n\n  @media ${device.tablet} {\n    position: absolute;\n    left: 103px;\n    top: 826px;\n    margin-left: 0px;\n\n    z-index: -1;\n    display: flex;\n  }\n\n  @media ${device.laptop} {\n    left: 230px;\n    top: 658px;\n  }\n`;\n","import Icon from 'images/icons-sprite.svg';\n\nimport HomeAuthForm from 'components/HomeAuthForm/HomeAuthForm';\nimport { Cabbage } from 'components/UI/Cabbage/Cabbage';\nimport { AnimateBackground } from 'components/UI/AnimateBackground/AnimateBackground';\nimport {\n  HomePageWrapper,\n  TextGroup,\n  CabbageContainer,\n} from './HomePage.styled';\n\nconst HomePage = () => {\n  return (\n    <>\n      <AnimateBackground />\n      <HomePageWrapper>\n        <TextGroup>\n          <svg alt=\"mainLogo\">\n            <use href={`${Icon}#icon-logo-main`}></use>\n          </svg>\n          <p>Smart Finance</p>\n        </TextGroup>\n        <HomeAuthForm />\n      </HomePageWrapper>\n      <CabbageContainer>\n        <Cabbage />\n        <Cabbage position={true} />\n      </CabbageContainer>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["BackgroundGrey","styled","device","BackgroundWhite","AnimateBackground","white","Cabbage","letDown","keyframes","increase","LeftCabbageWrapper","RightCabbageWrapper","bubble","Item","position","alt","href","Icons","CabbageList","width","height","MainWrapper","GoogleText","GoogleButton","LoginText","AuthFormLabel","Input","Field","ButtonContainer","EyeWrapper","initialValues","email","password","useState","showHidePassword","setShowHidePassword","type","icon","onSubmit","values","resetForm","autoComplete","htmlFor","name","placeholder","onClick","Button","color","design","HomePageWrapper","TextGroup","CabbageContainer","Icon"],"sourceRoot":""}