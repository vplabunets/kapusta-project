{"version":3,"file":"static/js/164.fa789a56.chunk.js","mappings":"sMAIaA,EAAiBC,EAAAA,GAAAA,IAAH,yZAehBC,EAAAA,EAAAA,OAGAA,EAAAA,EAAAA,QAKEC,EAAkBF,EAAAA,GAAAA,IAAH,gNAGjBC,EAAAA,EAAAA,Q,SC3BEE,EAAoB,SAAC,GAChC,OAD8C,EAAZC,OAG9B,SAACF,EAAD,WACE,SAACG,EAAA,EAAD,OAKJ,SAACN,EAAD,WACE,SAACM,EAAA,EAAD,KAGL,C,+ICZKC,GAAUC,EAAAA,EAAAA,IAAH,+JAYPC,GAAWD,EAAAA,EAAAA,IAAH,gOAeDE,EAAqBT,EAAAA,GAAAA,IAAH,8WAOdM,EAUAE,GAIJE,EAAsBV,EAAAA,GAAAA,IAAH,iiBAGrBC,EAAAA,EAAAA,OAeQK,EAUAE,GAKbG,GAASJ,EAAAA,EAAAA,IAAH,yUAqBCK,EAAOZ,EAAAA,GAAAA,GAAH,yuDAGFW,EAmCJV,EAAAA,EAAAA,Q,SCxIEI,EAAU,SAAC,GACtB,OADuC,EAAfQ,UAGpB,UAACH,EAAD,YACE,gBAAKI,IAAI,UAAT,UACE,gBAAKC,KAAI,UAAKC,EAAAA,EAAL,4BAEX,uBAMJ,UAACP,EAAD,YACE,gBAAKK,IAAI,UAAT,UACE,gBAAKC,KAAI,UAAKC,EAAAA,EAAL,2BAEX,qBAGL,EAEYC,EAAc,WACzB,OACE,2BACE,SAACL,EAAD,WACE,gBAAKM,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKJ,KAAI,UAAKC,EAAAA,EAAL,6BAGb,SAACJ,EAAD,WACE,gBAAKM,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKJ,KAAI,UAAKC,EAAAA,EAAL,6BAGb,SAACJ,EAAD,WACE,gBAAKM,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKJ,KAAI,UAAKC,EAAAA,EAAL,6BAGb,SAACJ,EAAD,WACE,gBAAKM,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKJ,KAAI,UAAKC,EAAAA,EAAL,6BAGb,SAACJ,EAAD,WACE,gBAAKM,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKJ,KAAI,UAAKC,EAAAA,EAAL,6BAGb,SAACJ,EAAD,WACE,gBAAKM,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKJ,KAAI,UAAKC,EAAAA,EAAL,6BAGb,SAACJ,EAAD,WACE,gBAAKM,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKJ,KAAI,UAAKC,EAAAA,EAAL,6BAGb,SAACJ,EAAD,WACE,gBAAKM,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKJ,KAAI,UAAKC,EAAAA,EAAL,6BAGb,SAACJ,EAAD,WACE,gBAAKM,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKJ,KAAI,UAAKC,EAAAA,EAAL,6BAGb,SAACJ,EAAD,WACE,gBAAKM,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKJ,KAAI,UAAKC,EAAAA,EAAL,6BAGb,SAACJ,EAAD,WACE,gBAAKM,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKJ,KAAI,UAAKC,EAAAA,EAAL,6BAGb,SAACJ,EAAD,WACE,gBAAKM,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKJ,KAAI,UAAKC,EAAAA,EAAL,6BAGb,SAACJ,EAAD,WACE,gBAAKM,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKJ,KAAI,UAAKC,EAAAA,EAAL,6BAGb,SAACJ,EAAD,WACE,gBAAKM,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKJ,KAAI,UAAKC,EAAAA,EAAL,6BAGb,SAACJ,EAAD,WACE,gBAAKM,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKJ,KAAI,UAAKC,EAAAA,EAAL,6BAGb,SAACJ,EAAD,WACE,gBAAKM,MAAM,KAAKC,OAAO,KAAvB,UACE,gBAAKJ,KAAI,UAAKC,EAAAA,EAAL,8BAKlB,C,4LCjHYI,EAAYpB,EAAAA,GAAAA,IAAH,oJ,SCgBtB,EAfe,SAAC,GAAiC,IAAD,IAA9BkB,MAAAA,OAA8B,MAAtB,GAAsB,MAAlBC,OAAAA,OAAkB,MAAT,GAAS,EAC9C,OACE,SAACC,EAAD,WACE,SAAC,KAAD,CACEC,UAAU,oBACVC,YAAa,EACbJ,MAAOA,EACPC,OAAQA,EACRI,MAAM,UACNC,eAAe,aAItB,E,oBCXYC,EAAczB,EAAAA,GAAAA,IAAH,8UASbC,EAAAA,EAAAA,OAMAA,EAAAA,EAAAA,QAKEyB,EAAa1B,EAAAA,GAAAA,EAAH,sPAWZC,EAAAA,EAAAA,QAME0B,EAAe3B,EAAAA,GAAAA,EAAH,mnBAiCZ4B,EAAY5B,EAAAA,GAAAA,EAAH,oOAUXC,EAAAA,EAAAA,QAME4B,EAAgB7B,EAAAA,GAAAA,MAAH,iWAWfC,EAAAA,EAAAA,QASE6B,GAAQ9B,EAAAA,EAAAA,IAAO+B,EAAAA,GAAP/B,CAAH,8bACC,SAAAgC,GAAC,OAAIA,EAAEC,MAAMC,WAAWC,WAAvB,IAsBPC,EAAkBpC,EAAAA,GAAAA,IAAH,2LAKjBC,EAAAA,EAAAA,QAMEoC,EAAarC,EAAAA,GAAAA,IAAH,8YAuBVsC,EAAkBtC,EAAAA,GAAAA,IAAH,mIAQfuC,EAAiBvC,EAAAA,GAAAA,OAAH,4cC9KdwC,EAAUxC,EAAAA,GAAAA,IAAH,sJAKTC,EAAAA,EAAAA,QAKEwC,EAAazC,EAAAA,GAAAA,OAAH,6TAmBV0C,EAAO1C,EAAAA,GAAAA,GAAH,yNAaJoC,EAAkBpC,EAAAA,GAAAA,IAAH,mH,oBCtBtB2C,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KACJE,MAAM,iBACNC,SAAS,8BAGRC,EAAgB,CACpBF,MAAO,IAGIG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACpBC,GAAcC,EAAAA,EAAAA,KAAdD,UACFE,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACd,EAAD,YACE,SAACC,EAAD,CAAYc,QAAS,kBAAML,GAAW,EAAjB,EAArB,UACE,0BACE,gBAAKnC,KAAI,UAAKyC,EAAAA,EAAL,2BAGb,SAACd,EAAD,8DACA,SAAC,KAAD,CACEM,cAAeA,EACfS,SAAU,SAAAC,GACRL,GAASM,EAAAA,EAAAA,IAAcD,IACvBR,GAAW,EACZ,EACDU,iBAAkBjB,EANpB,SAQG,gBACCe,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aAPD,OASC,UAAC,KAAD,CAAMC,aAAa,MAAMV,SAAUQ,EAAnC,WACE,UAACpC,EAAD,CAAeuC,QAAQ,QAAvB,oBAEE,SAACtC,EAAD,CACEuC,KAAK,QACLC,KAAK,QACLC,YAAY,iBACZb,OAAQA,EAAOZ,MACf0B,SAAUT,EACVU,OAAQT,KAEV,SAAC1B,EAAD,UACGuB,EAAOf,OAASgB,EAAQhB,OAASe,EAAOf,YAG7C,SAAC,EAAD,WACE,SAAC4B,EAAA,EAAD,CACEL,KAAM,SACN9C,MAAO,SACPoD,OAAQ,OACRC,SAAUV,EAJZ,SAMGf,GAAY,SAAC,EAAD,CAAQjC,MAAO,GAAIC,OAAQ,KAAS,aA/BxD,MAuCR,E,gCClEKwB,GAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KACJE,MAAM,iBACNC,SAAS,4BACZ8B,SAAUjC,EAAAA,KACPkC,IAAI,EAAG,sBACPC,IAAI,GAAI,qBACRhC,SAAS,8BAGRC,GAAgB,CACpBF,MAAO,GACP+B,SAAU,IAyJZ,GAtJqB,WACnB,OAA8CG,EAAAA,EAAAA,WAAS,GAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KACA,GAAgDF,EAAAA,EAAAA,WAAS,GAAzD,eAAOG,EAAP,KAAyBC,EAAzB,KACM/B,GAAWC,EAAAA,EAAAA,MACT+B,GAAMC,EAAAA,GAAAA,MAAND,EACAlC,GAAcC,EAAAA,EAAAA,KAAdD,UAwBR,OACE,SAAC1B,EAAD,UACIwD,GA8GA,SAAChC,EAAD,CACEN,iBAAkBA,GAAiBG,MACnCI,WAAYgC,KA/Gd,4BACE,UAACxD,EAAD,WAAa2D,EAAE,4BAAf,QACA,UAAC1D,EAAD,CAAcZ,KAAK,qEAAnB,WACE,0BACE,gBAAKA,KAAI,UAAKyC,EAAAA,EAAL,yBAFb,aAMA,UAAC5B,EAAD,WACGyD,EAAE,0BADL,MACiC,kBADjC,IACyCA,EAAE,sBAD3C,QAGA,SAAC,KAAD,CACErC,cAAeA,GACfS,SAAU,SAAAC,GAAM,OAAIL,GAASkC,EAAAA,EAAAA,IAAM7B,GAAnB,EAChBE,iBAAkBjB,GAHpB,SAKG,gBACCe,EADD,EACCA,OACAG,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,aACAsB,EARD,EAQCA,YARD,OAUC,UAAC,KAAD,CAAMrB,aAAa,MAAMV,SAAUQ,EAAnC,WACE,UAACpC,EAAD,CAAeuC,QAAQ,QAAvB,oBAEE,SAACtC,EAAD,CACEuC,KAAK,QACLC,KAAK,QACLC,YAAY,iBACZb,OAAQA,EAAOZ,MACf0B,SAAUT,EACVU,OAAQT,KAEV,SAAC1B,EAAD,UACGuB,EAAOf,OAASgB,EAAQhB,OAASe,EAAOf,YAG7C,UAACjB,EAAD,CAAeuC,QAAQ,WAAvB,UACGiB,EAAE,yBADL,KAEE,UAAChD,EAAD,YACE,SAACP,EAAD,CACEuC,KAAMc,EAAmB,OAAS,WAClCb,KAAK,WACLC,YAAac,EAAE,yBACf3B,OAAQA,EAAOmB,SACfL,SAAUT,EACVU,OAAQT,KAEV,mBACEK,KAAK,SACLd,QAAS,kBAAM6B,GAAqBD,EAA3B,EAFX,UAIE,0BACE,gBACEpE,KACkB,UACTyC,EAAAA,EADP2B,EAAgB,0CAQ1B,SAAC7C,EAAD,UACGuB,EAAOgB,UAAYf,EAAQe,UAAYhB,EAAOgB,YAEjD,SAACtC,EAAD,CACE8B,KAAK,SACLd,QAAS,kBAAM2B,GAAmB,EAAzB,EAFX,uCAOF,UAAC9C,EAAD,YACE,SAACsC,EAAA,EAAD,CACEL,KAAM,SACN9C,MAAO,SACPoD,OAAQ,OACRC,SAAUV,EAJZ,SAMGf,GACC,SAAC,EAAD,CAAQjC,MAAO,GAAIC,OAAQ,KAE3BkE,EAAE,0BAGN,SAACX,EAAA,EAAD,CACEL,KAAM,SACN9C,MAAO,OACPoD,OAAQ,OACRC,SAAUV,EACVX,QAAS,kBAxHX,SAACM,EAAQH,EAAQ8B,GAC/B,OAAI3B,EAAOf,OAASe,EAAOgB,SAClBY,GAAAA,GAAAA,QAAc,4BAA6B,CAChD5E,SAAU4E,GAAAA,GAAAA,SAAAA,UACVxD,MAAO,UACPyD,cAAc,IAGbhC,EAAOZ,OAAUY,EAAOmB,SAOzBnB,EAAOZ,OAASY,EAAOmB,UACzBxB,GAASsC,EAAAA,EAAAA,IAASjC,SAClB8B,UAFF,EANSC,GAAAA,GAAAA,QAAc,6BAA8B,CACjD5E,SAAU4E,GAAAA,GAAAA,SAAAA,UACVxD,MAAO,UACPyD,cAAc,GAQnB,CAoGgCnC,CAAQM,EAAQH,EAAQ8B,EAA9B,EALX,SAOGrC,GACC,SAAC,EAAD,CAAQjC,MAAO,GAAIC,OAAQ,KAE3BkE,EAAE,oCApFX,QAoGZ,E,sBCxLYO,GAAkB5F,EAAAA,GAAAA,IAAH,oQAOjBC,EAAAA,EAAAA,OAIAA,EAAAA,EAAAA,QAOE4F,GAAY7F,EAAAA,GAAAA,IAAH,4pBAIXC,EAAAA,EAAAA,OAKAA,EAAAA,EAAAA,OAQEA,EAAAA,EAAAA,OAIAA,EAAAA,EAAAA,OAaAA,EAAAA,EAAAA,QAQA6F,GAAmB9F,EAAAA,GAAAA,IAAH,yPAGlBC,EAAAA,EAAAA,OAUAA,EAAAA,EAAAA,QC7CX,GArBiB,WACf,OACE,iCACE,SAACE,GAAA,EAAD,KACA,UAACyF,GAAD,YACE,UAACC,GAAD,YACE,gBAAK/E,IAAI,WAAT,UACE,gBAAKC,KAAI,UAAKgF,EAAAA,EAAL,wBAEX,6CAEF,SAAC,GAAD,QAEF,UAACD,GAAD,YACE,SAACzF,GAAA,EAAD,KACA,SAACA,GAAA,EAAD,CAASQ,UAAU,SAI1B,C","sources":["components/UI/AnimateBackground/AnimateBackground.styled.jsx","components/UI/AnimateBackground/AnimateBackground.jsx","components/UI/Cabbage/Cabbage.styled.jsx","components/UI/Cabbage/Cabbage.jsx","components/UI/Loader/Loader.styled.jsx","components/UI/Loader/Loader.jsx","components/HomeAuthForm/HomeAuthForm.styled.jsx","components/ForgotModal/ForgotModal.styled.jsx","components/ForgotModal/ForgotModal.jsx","components/HomeAuthForm/HomeAuthForm.jsx","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport DEVICE from 'constants/deviceSize';\n\nexport const BackgroundGrey = styled.div`\n  z-index: -1;\n  width: 100%;\n  height: 342px;\n\n  position: absolute;\n  top: 0;\n  background-color: #f5f6fb;\n  border-bottom-left-radius: 20%;\n\n  overflow: hidden;\n\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n\n  @media ${DEVICE.tablet} {\n    height: 582px;\n  }\n  @media ${DEVICE.laptop} {\n    height: 582.5px;\n  }\n`;\n\nexport const BackgroundWhite = styled.div`\n  display: none;\n\n  @media ${DEVICE.laptop} {\n    display: block;\n    z-index: -2;\n    width: 100%;\n    height: 100%;\n\n    position: fixed;\n    bottom: -1px;\n\n    overflow: hidden;\n  }\n`;\n","import { CabbageList } from '../Cabbage/Cabbage';\nimport { BackgroundGrey, BackgroundWhite } from './AnimateBackground.styled';\n\nexport const AnimateBackground = ({ white }) => {\n  if (white)\n    return (\n      <BackgroundWhite>\n        <CabbageList />\n      </BackgroundWhite>\n    );\n\n  return (\n    <BackgroundGrey>\n      <CabbageList />\n    </BackgroundGrey>\n  );\n};\n","import styled from 'styled-components';\nimport DEVICE from 'constants/deviceSize';\nimport { keyframes } from '@emotion/css';\n\nconst letDown = keyframes`\n  from {\n    transform: translateY(0%);\n  }\n50% {\n    transform: translateY(20px);\n}\n  to {\n   transform: translateY(0%);\n  }\n`;\n\nconst increase = keyframes`\n  from {\n    width: 67px;\n        background-color: #f5f6fb;\n  }\n50% {\n    width: 80px;\n        background-color: #DBDBDB;\n}\n  to {\n    width: 67px;\n        background-color: #f5f6fb;\n  }\n`;\n\nexport const LeftCabbageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  & > svg {\n    width: 83px;\n    height: 89px;\n    margin-bottom: 20px;\n    animation: ${letDown} 4s linear infinite;\n  }\n\n  & > div {\n    display: block;\n\n    width: 67px;\n    height: 14px;\n    border-radius: 50%;\n    background-color: #f5f6fb;\n    animation: ${increase} 4s linear infinite;\n  }\n`;\n\nexport const RightCabbageWrapper = styled.div`\n  display: none;\n\n  @media ${DEVICE.tablet} {\n    display: flex;\n    flex-direction: column;\n\n    position: relative;\n    top: -16px;\n    left: 11px;\n\n    z-index: -1;\n\n    & > svg {\n      display: block;\n      width: 83px;\n      height: 89px;\n      margin-bottom: 20px;\n      animation: ${letDown} 4s linear infinite;\n    }\n\n    & > div {\n      display: block;\n\n      width: 67px;\n      height: 14px;\n      border-radius: 50%;\n      background-color: #f5f6fb;\n      animation: ${increase} 4s linear infinite;\n    }\n  }\n`;\n\nconst bubble = keyframes`\n  0%{\n        transform: translateY(0) rotate(0deg);\n        opacity: 1;\n        border-radius: 0;\n stroke: #DFE2EB;\n    }\n\n    50% {\n     \n    stroke: #DBDBDB;\n    }\n\n    100%{\n        transform: translateY(-150vw) rotate(750deg);\n        opacity: 0;\n        border-radius: 50%;\n\n    }\n`;\n\nexport const Item = styled.li`\n  position: absolute;\n  display: block;\n  animation: ${bubble} 20s linear infinite;\n  bottom: -85px;\n  opacity: 0;\n\n  &:nth-child(1) {\n    transform: rotate(-90deg);\n\n    left: 0%;\n    animation-delay: 8s;\n  }\n  &:nth-child(2) {\n    left: 20%;\n    animation-delay: 5s;\n  }\n  &:nth-child(3) {\n    left: 40%;\n    transform: rotate(90deg);\n    animation-delay: 7s;\n  }\n  &:nth-child(4) {\n    left: 60%;\n    transform: rotate(-90deg);\n    animation-delay: 11s;\n  }\n  &:nth-child(5) {\n    left: 80%;\n    transform: rotate(-180deg);\n    animation-delay: 13s;\n  }\n  &:nth-child(6) {\n    left: 99%;\n    transform: rotate(-90deg);\n    animation-delay: 3s;\n  }\n\n  @media ${DEVICE.tablet} {\n    &:nth-child(7) {\n      left: 50%;\n      animation-delay: 2s;\n    }\n\n    &:nth-child(8) {\n      left: 55%;\n      transform: rotate(-90deg);\n      animation-delay: 6s;\n    }\n    &:nth-child(9) {\n      left: 69%;\n      transform: rotate(-180deg);\n      animation-delay: 9s;\n    }\n    &:nth-child(10) {\n      left: 95%;\n      transform: rotate(-90deg);\n      animation-delay: 1s;\n    }\n    &:nth-child(11) {\n      left: 44%;\n      animation-delay: 4s;\n    }\n\n    &:nth-child(12) {\n      left: 85%;\n      transform: rotate(-90deg);\n      animation-delay: 15s;\n    }\n    &:nth-child(13) {\n      left: 38%;\n      transform: rotate(-120deg);\n      animation-delay: 3s;\n    }\n    &:nth-child(14) {\n      left: 90%;\n      transform: rotate(-120deg);\n      animation-delay: 17s;\n    }\n    &:nth-child(15) {\n      left: 15%;\n      transform: rotate(-120deg);\n      animation-delay: 10s;\n    }\n    &:nth-child(16) {\n      right: 65%;\n      transform: rotate(-120deg);\n      animation-delay: 6s;\n    }\n  }\n`;\n","import Icons from 'images/icons-sprite.svg';\n\nimport {\n  LeftCabbageWrapper,\n  RightCabbageWrapper,\n  Item,\n} from './Cabbage.styled';\n\nexport const Cabbage = ({ position }) => {\n  if (position) {\n    return (\n      <RightCabbageWrapper>\n        <svg alt=\"cabbage\">\n          <use href={`${Icons}#icon-cabbage-right`}></use>\n        </svg>\n        <div></div>\n      </RightCabbageWrapper>\n    );\n  }\n\n  return (\n    <LeftCabbageWrapper>\n      <svg alt=\"cabbage\">\n        <use href={`${Icons}#icon-cabbage-left`}></use>\n      </svg>\n      <div></div>\n    </LeftCabbageWrapper>\n  );\n};\n\nexport const CabbageList = () => {\n  return (\n    <ul>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n      <Item>\n        <svg width=\"83\" height=\"85\">\n          <use href={`${Icons}#icon-cabbage-left`}></use>\n        </svg>\n      </Item>\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LoaderBox = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  z-index: 1;\n`;\n","import { Oval } from 'react-loader-spinner';\nimport { LoaderBox } from './Loader.styled';\n\nconst Spiner = ({ width = 40, height = 40 }) => {\n  return (\n    <LoaderBox>\n      <Oval\n        ariaLabel=\"loading-indicator\"\n        strokeWidth={5}\n        width={width}\n        height={height}\n        color=\"#FF751D\"\n        secondaryColor=\"#a2a4b0\"\n      />\n    </LoaderBox>\n  );\n};\n\nexport default Spiner;\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nimport DEVICE from 'constants/deviceSize';\n\nexport const MainWrapper = styled.div`\n  margin: 0 auto;\n  background-color: #ffffff;\n  max-width: 426px;\n\n  padding: 40px 20px;\n  box-shadow: 5px 10px 20px rgba(170, 178, 197, 0.4);\n  border-radius: 30px;\n\n  @media ${DEVICE.tablet} {\n    max-width: 426px;\n    width: 426px;\n    padding: 56px 83px;\n  }\n\n  @media ${DEVICE.laptop} {\n    margin: 117px 0 0;\n  }\n`;\n\nexport const GoogleText = styled.p`\n  width: 222px;\n  margin: 0 auto 16px;\n\n  font-size: 12px;\n  line-height: 1.17;\n  text-align: center;\n  letter-spacing: 0.04em;\n\n  color: #52555f;\n\n  @media ${DEVICE.laptop} {\n    width: 100%;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const GoogleButton = styled.a`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 122px;\n  height: 40px;\n  margin: 0 auto 32px;\n  background-color: #f6f7fb;\n  border: none;\n  border-radius: 26px;\n\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 1.14;\n  text-decoration: none;\n\n  letter-spacing: 0.02em;\n  color: #000000;\n  transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  filter: drop-shadow(1px 3px 5px rgba(82, 85, 95, 0.15));\n\n  &:hover,\n  &:focus {\n    transform: scale(0.9);\n  }\n\n  & svg {\n    width: 18px;\n    height: 18px;\n    margin-right: 10px;\n  }\n`;\n\nexport const LoginText = styled.p`\n  text-align: left;\n  margin-bottom: 16px;\n\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.04em;\n\n  color: #52555f;\n\n  @media ${DEVICE.laptop} {\n    width: 250px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const AuthFormLabel = styled.label`\n  position: relative;\n  display: block;\n  /* margin-bottom: 12px; */\n  font-size: 10px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n  color: #000000;\n  :nth-of-type(2) {\n    margin-top: 20px;\n  }\n  @media ${DEVICE.tablet} {\n    font-size: 12px;\n    line-height: 1.16;\n    :nth-of-type(2) {\n      margin-top: 32px;\n    }\n  }\n`;\n\nexport const Input = styled(Field)`\n  outline-color: ${p => p.theme.lightTheme.accentColor};\n  font-family: inherit;\n  margin-top: 12px;\n  width: 100%;\n  height: 52px;\n  padding: 17px 19px;\n  outline: none;\n  border: none;\n  border-radius: 30px;\n  background-color: #f6f7fb;\n  font-size: 14px;\n  line-height: 1.14;\n  letter-spacing: 0.04em;\n  color: #52555f;\n  ::placeholder {\n    font-size: 14px;\n    line-height: 1.14;\n    letter-spacing: 0.04em;\n    color: #a6abb9;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 40px;\n  gap: 8px;\n  @media ${DEVICE.tablet} {\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nexport const EyeWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  & svg {\n    width: 20px;\n    height: 20px;\n    fill: #52555f;\n  }\n  & button {\n    position: absolute;\n    top: 28px;\n    right: 19px;\n    width: 20px;\n    height: 20px;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n  }\n`;\n\nexport const ErrorValidation = styled.div`\n  font-size: 10px;\n  line-height: 1.2;\n  letter-spacing: 0.04em;\n  color: #eb5757;\n  margin-top: 5px;\n`;\n\nexport const ReminderButton = styled.button`\n  position: absolute;\n  top: 100%;\n  right: 5px;\n  font-size: 10px;\n  line-height: 1, 2;\n  letter-spacing: 0.04em;\n  color: #52555f;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  padding: 5px;\n\n  transition: transform 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  filter: drop-shadow(1px 3px 5px rgba(82, 85, 95, 0.15));\n\n  &:hover,\n  &:focus {\n    transform: scale(0.9);\n    color: #000000;\n  }\n`;\n","import styled from 'styled-components';\nimport DEVICE from 'constants/deviceSize';\nexport const Wrapper = styled.div`\n  display: flex;\n  padding-bottom: 79px;\n  flex-direction: column;\n  width: 240px;\n  @media ${DEVICE.tablet} {\n    width: 252px;\n  }\n`;\n\nexport const ButtonBack = styled.button`\n  position: relative;\n  top: 5px;\n  left: 0;\n  cursor: pointer;\n  background-color: transparent;\n  display: flex;\n  justify-content: center;\n  outline: none;\n  border: none;\n  width: 24px;\n  height: 24px;\n  margin-bottom: 79px;\n  & svg {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nexport const Text = styled.h2`\n  width: 100%;\n  display: block;\n\n  margin: 0 auto 16px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.17;\n  text-align: center;\n  letter-spacing: 0.04em;\n  color: #52555f;\n`;\n\nexport const ButtonContainer = styled.div`\n  margin-top: 40px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { Formik, Form } from 'formik';\nimport { Button } from 'components/UI/Button/Button';\nimport Spiner from 'components/UI/Loader/Loader';\nimport { useAuth } from 'hooks/useAuth';\nimport icon from 'images/icons-sprite.svg';\nimport * as Yup from 'yup';\n\nimport {\n  Input,\n  AuthFormLabel,\n  ErrorValidation,\n} from '../HomeAuthForm/HomeAuthForm.styled';\n\nimport {\n  ButtonBack,\n  Text,\n  Wrapper,\n  ButtonContainer,\n} from './ForgotModal.styled';\nimport { useDispatch } from 'react-redux';\nimport { resetPassword } from 'redux/auth/operations';\n\nconst ValidationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email')\n    .required('This is a required field'),\n});\n\nconst initialValues = {\n  email: '',\n};\n\nexport const ForgotModal = ({ closeModal }) => {\n  const { isLoading } = useAuth();\n  const dispatch = useDispatch();\n\n  return (\n    <Wrapper>\n      <ButtonBack onClick={() => closeModal(false)}>\n        <svg>\n          <use href={`${icon}#icon-arrow-back`}></use>\n        </svg>\n      </ButtonBack>\n      <Text> Forgot your password? Please enter your email</Text>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={values => {\n          dispatch(resetPassword(values));\n          closeModal(false);\n        }}\n        validationSchema={ValidationSchema}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n        }) => (\n          <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <AuthFormLabel htmlFor=\"Email\">\n              Email:\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"your@email.com\"\n                values={values.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n              <ErrorValidation>\n                {errors.email && touched.email && errors.email}\n              </ErrorValidation>\n            </AuthFormLabel>\n            <ButtonContainer>\n              <Button\n                type={'submit'}\n                color={'accent'}\n                design={'home'}\n                disabled={isSubmitting}\n              >\n                {isLoading ? <Spiner width={30} height={30} /> : 'Send'}\n              </Button>\n            </ButtonContainer>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n","import { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Button } from 'components/UI/Button/Button';\nimport { ForgotModal } from 'components/ForgotModal/ForgotModal';\nimport {\n  MainWrapper,\n  GoogleText,\n  GoogleButton,\n  LoginText,\n  AuthFormLabel,\n  Input,\n  ButtonContainer,\n  EyeWrapper,\n  ErrorValidation,\n  ReminderButton,\n} from './HomeAuthForm.styled';\nimport icon from 'images/icons-sprite.svg';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn, register } from 'redux/auth/operations';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport { useAuth } from 'hooks/useAuth';\nimport Spiner from 'components/UI/Loader/Loader';\n\nconst ValidationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email')\n    .required('This is a required field'),\n  password: Yup.string()\n    .min(6, 'Password too short')\n    .max(50, 'Password too long')\n    .required('This is a required field'),\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst HomeAuthForm = () => {\n  const [openForgotModal, setOpenForgotModal] = useState(false);\n  const [showHidePassword, setShowHidePassword] = useState(false);\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const { isLoading } = useAuth();\n\n  const onClick = (errors, values, handleReset) => {\n    if (errors.email || errors.password)\n      return toast.warning('Both fields must be valid', {\n        position: toast.POSITION.TOP_RIGHT,\n        theme: 'colored',\n        pauseOnHover: true,\n      });\n\n    if (!values.email || !values.password)\n      return toast.warning('Both fields must be filled', {\n        position: toast.POSITION.TOP_RIGHT,\n        theme: 'colored',\n        pauseOnHover: true,\n      });\n\n    if (values.email && values.password) {\n      dispatch(register(values));\n      handleReset();\n      return;\n    }\n  };\n\n  return (\n    <MainWrapper>\n      {!openForgotModal ? (\n        <div>\n          <GoogleText>{t('registration.Google Text')}:</GoogleText>\n          <GoogleButton href=\"https://kapusta-project-back-production.up.railway.app/auth/google\">\n            <svg>\n              <use href={`${icon}#icon-google-icon`}></use>\n            </svg>\n            Google\n          </GoogleButton>\n          <LoginText>\n            {t('registration.loginText')}, <br /> {t('registration.after')}:\n          </LoginText>\n          <Formik\n            initialValues={initialValues}\n            onSubmit={values => dispatch(logIn(values))}\n            validationSchema={ValidationSchema}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n              isSubmitting,\n              handleReset,\n            }) => (\n              <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n                <AuthFormLabel htmlFor=\"Email\">\n                  Email:\n                  <Input\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"your@email.com\"\n                    values={values.email}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                  <ErrorValidation>\n                    {errors.email && touched.email && errors.email}\n                  </ErrorValidation>\n                </AuthFormLabel>\n                <AuthFormLabel htmlFor=\"password\">\n                  {t('registration.Password')}:\n                  <EyeWrapper>\n                    <Input\n                      type={showHidePassword ? 'text' : 'password'}\n                      name=\"password\"\n                      placeholder={t('registration.Password')}\n                      values={values.password}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowHidePassword(!showHidePassword)}\n                    >\n                      <svg>\n                        <use\n                          href={\n                            showHidePassword\n                              ? `${icon}#icon-eye-closed`\n                              : `${icon}#icon-eye`\n                          }\n                        ></use>\n                      </svg>\n                    </button>\n                  </EyeWrapper>\n                  <ErrorValidation>\n                    {errors.password && touched.password && errors.password}\n                  </ErrorValidation>\n                  <ReminderButton\n                    type=\"button\"\n                    onClick={() => setOpenForgotModal(true)}\n                  >\n                    Forgot your password?\n                  </ReminderButton>\n                </AuthFormLabel>\n                <ButtonContainer>\n                  <Button\n                    type={'submit'}\n                    color={'accent'}\n                    design={'home'}\n                    disabled={isSubmitting}\n                  >\n                    {isLoading ? (\n                      <Spiner width={30} height={30} />\n                    ) : (\n                      t('registration.LOG IN')\n                    )}\n                  </Button>\n                  <Button\n                    type={'button'}\n                    color={'grey'}\n                    design={'home'}\n                    disabled={isSubmitting}\n                    onClick={() => onClick(errors, values, handleReset)}\n                  >\n                    {isLoading ? (\n                      <Spiner width={25} height={25} />\n                    ) : (\n                      t('registration.REGISTRATION')\n                    )}\n                  </Button>\n                </ButtonContainer>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      ) : (\n        <ForgotModal\n          ValidationSchema={ValidationSchema.email}\n          closeModal={setOpenForgotModal}\n        />\n      )}\n    </MainWrapper>\n  );\n};\n\nexport default HomeAuthForm;\n","import styled from 'styled-components';\n\nimport DEVICE from 'constants/deviceSize';\n\nexport const HomePageWrapper = styled.div`\n  padding: 0 20px;\n  margin: 0 auto;\n\n  display: flex;\n  flex-direction: column;\n\n  @media ${DEVICE.tablet} {\n    max-width: 426px;\n  }\n\n  @media ${DEVICE.laptop} {\n    align-items: center;\n    flex-direction: row;\n    justify-content: center;\n  }\n`;\n\nexport const TextGroup = styled.div`\n  margin-top: 86px;\n  margin-bottom: 50px;\n\n  @media ${DEVICE.tablet} {\n    margin-top: 80px;\n    margin-bottom: 80px;\n  }\n\n  @media ${DEVICE.laptop} {\n    margin-right: 157px;\n  }\n\n  & > svg {\n    width: 183px;\n    height: 46.34px;\n\n    @media ${DEVICE.tablet} {\n      width: 306.52px;\n      height: 77.69px;\n    }\n    @media ${DEVICE.laptop} {\n      width: 377px;\n      height: 120px;\n    }\n  }\n  & > p {\n    font-weight: 700;\n    font-size: 13px;\n    line-height: 1.15;\n    letter-spacing: 0.15em;\n    text-transform: uppercase;\n    color: #52555f;\n\n    @media ${DEVICE.tablet} {\n      font-size: 16px;\n      line-height: 1.19;\n      letter-spacing: 0.18em;\n    }\n  }\n`;\n\nexport const CabbageContainer = styled.div`\n  margin-left: 35px;\n\n  @media ${DEVICE.tablet} {\n    position: absolute;\n    left: 103px;\n    top: 826px;\n    margin-left: 0px;\n\n    z-index: -1;\n    display: flex;\n  }\n\n  @media ${DEVICE.laptop} {\n    left: 230px;\n    top: 658px;\n  }\n`;\n","import Icon from 'images/icons-sprite.svg';\n\nimport HomeAuthForm from 'components/HomeAuthForm/HomeAuthForm';\nimport { Cabbage } from 'components/UI/Cabbage/Cabbage';\nimport { AnimateBackground } from 'components/UI/AnimateBackground/AnimateBackground';\nimport {\n  HomePageWrapper,\n  TextGroup,\n  CabbageContainer,\n} from './HomePage.styled';\n\nconst HomePage = () => {\n  return (\n    <>\n      <AnimateBackground />\n      <HomePageWrapper>\n        <TextGroup>\n          <svg alt=\"mainLogo\">\n            <use href={`${Icon}#icon-logo-main`}></use>\n          </svg>\n          <p>Smart Finance</p>\n        </TextGroup>\n        <HomeAuthForm />\n      </HomePageWrapper>\n      <CabbageContainer>\n        <Cabbage />\n        <Cabbage position={true} />\n      </CabbageContainer>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["BackgroundGrey","styled","DEVICE","BackgroundWhite","AnimateBackground","white","Cabbage","letDown","keyframes","increase","LeftCabbageWrapper","RightCabbageWrapper","bubble","Item","position","alt","href","Icons","CabbageList","width","height","LoaderBox","ariaLabel","strokeWidth","color","secondaryColor","MainWrapper","GoogleText","GoogleButton","LoginText","AuthFormLabel","Input","Field","p","theme","lightTheme","accentColor","ButtonContainer","EyeWrapper","ErrorValidation","ReminderButton","Wrapper","ButtonBack","Text","ValidationSchema","Yup","shape","email","required","initialValues","ForgotModal","closeModal","isLoading","useAuth","dispatch","useDispatch","onClick","icon","onSubmit","values","resetPassword","validationSchema","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","autoComplete","htmlFor","type","name","placeholder","onChange","onBlur","Button","design","disabled","password","min","max","useState","openForgotModal","setOpenForgotModal","showHidePassword","setShowHidePassword","t","useTranslation","logIn","handleReset","toast","pauseOnHover","register","HomePageWrapper","TextGroup","CabbageContainer","Icon"],"sourceRoot":""}